{% extends '::base.html.twig' %}

{% if tag_variable|lower == "quiebre" %}
    {% set url_evolutivo = path('quiebre_resumen_evolutivo') %}
    {% set url_excel = path('quiebre_detalle_excel') %}
{% else %}	
    {% set url_evolutivo = path('presencia_resumen_evolutivo') %}
    {% set url_excel = path('presencia_detalle_excel') %}
{% endif %}
{% if tag_variable|lower == "precio" %}
	{% set url_excel = path('precio_detalle_excel') %}
{% endif %}
{% set url_body_action = path(body_action) %}
{% set url_header_action = path(header_action) %}

{% block title %}Cadem Analytics{% endblock %}

{% block filtro %}
	<form id="filtros" action="" method="post" >
		{% for form in forms %}
				{{ form_widget(form) }}
		{% endfor %}
		<input class="btn btn-primary" type="submit" value="Filtrar" />
		<input class="btn btn-warning" type="submit" value="Limpiar Filtros" />
	</form>
{% endblock %}

{% block body %}
    <div class="span9">
		<div class="container-fluid well" style="padding-top:0">
			<h4>Detalle {{tag_variable}} {{tag_cliente}}</h4>
			<div class="hero-unit" style="padding:15px;margin-bottom:20px">												
				<div id="container" class="row-fluid">
					<table id="tabla_resumen" class="tabla_resumen table table-bordered display">                      
						<thead>
							<tr>
								{% for key,value in head %}
								{% if loop.index>columnas_reservadas and loop.index!=head|length %}										
								<th title="{{value['cod_sala']}}">
									{{value['cod_sala']}}
								</th>
								{% else %}	
								<th rowspan="2" style='vertical-align:middle' title="{{value}}">
									{{value}}
								</th>
								{% endif %}		
								{% endfor %}
							</tr>
							<tr>
								{% for key,value in head %}
								{% if loop.index>columnas_reservadas and loop.index!=head|length %}
								<th title="{{ value['nom_sala'] }}">
									{{value['nom_sala'][0:16]}}...											
								</th>
								{% endif %}		
								{% endfor %}
							</tr>
						</thead>                        					                   
					</table>				
				</div>		
				{% if tag_variable|lower in ['quiebre','presencia'] %}
				<table id='controls' width='100%' style='float:right'>
					<thead>
						<tr>							
							<th width='10%' class='ui-widget-content' style='font-size:medium'>
								<label style=';color:#2e6e9e'>
									Presencia:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:rgb(206, 250, 151);height:1.9em'>
								</div>
							</th>
							<th width='10%' class='ui-widget-content'>
								<label style=';color:#2e6e9e'>
									Quiebre:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:rgb(242, 136, 115);height:1.9em'>
								</div>
							</th>
							<th class='ui-widget-content' width='15%'>
								<label style=';color:#2e6e9e'>
									No planogramado:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:grey;height:1.9em'>
								</div>
							</th>
							</th>
							<th width='10%'>
								<a target="_blank" href="{{ url_excel }}"><label>Bajar Excel</label></a>
							</th>
							
						</tr>
					</thead>
				</table>		
				{% else %}
				<table id='controls' width='100%'>
					<thead>
						<tr >
							<th width='5%' class='ui-widget-content'>							
								<label for="amount" style=';color:#2e6e9e' >Índice:</label>
							</th>
							<th width='5%' class='ui-widget-content'>
								<input type="text" id="amount" style="font-size:1.5em; color:#2e6e9e; font-weight: bold; width:2.5em; margin-top:.5em" />
							</th>  							
							<th width='20%' class='ui-widget-content'>
								<div id="slider-range-min"></div>
							</th>
							<th width='5%' class='ui-widget-content'>
								<label id='pctje_incumplimiento' style="font-size:1.5em; color:#2e6e9e; font-weight: bold; width:2.5em; margin-top:.5em;color:red" title='PORCENTAJE FUERA DE RANGO'>
								</label>								
							</th>
							<th width='10%' class='ui-widget-content'>
								<label style=';color:#2e6e9e'>
									Fuera de rango:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:rgb(242, 136, 115);height:1.9em'>
								</div>
							</th>
							<th width='10%'>
								<a target="_blank" href="{{ url_excel }}"><label>Bajar Excel</label></a>
							</th>
						</tr>
					</thead>
				</table>
				{% endif %}								
			</div>					        
		</div>
	</div>
{% endblock %}

{% block customstyles %}
div.dataTables_scroll { 
	clear: both !important; 
	}	

table tbody tr{ 
	height: 1.23em !important;	
} 

td{
	text-align: center !important;
	font-size: .5em !important;
	height: 1em !important;
	padding: 0em !important;
}

th{
	font-size: .55em !important;
	text-align: center !important;
	padding: 0em !important;
}
	
.head{
	text-align: left !important;
}	

span.indenter{
	padding-left:0em !important;
}

.tag{
	text-align: left !important;
}

.tag2{
	vertical-align: middle !important;
	padding-left: .5em !important;
	padding-right: .5em !important;	
}

/* Block out what is behind the fixed column's header and footer */
table.DTFC_Cloned thead,
table.DTFC_Cloned tfoot {
	background-color: white !important;
}

#controls thead tr th{
	padding-right: 1em !important;
	padding-left: 1em !important;
    vertical-align: middle !important;
}

.dataTables_filter label{
	margin-bottom: 0em !important;	
}

/* Block out the gap above the scrollbar on the right, when there is a fixed
 * right column
 */
div.DTFC_Blocker {
	background-color: white !important;
}

.fueraRango{
	background: rgb(242, 136, 115);
	color:white;
}

.matched_active{				
	border-color: #00FF00;
	background-color: #d1ffd1 !important;
	
}

.matched{			
	/*border-style: solid;
	border-width: 2px;*/
	border-color: yellow;
	background-color: rgb(253, 255, 209) !important;
}

div.DataTables_sort_wrapper {
	padding-right: 4px !important;
	padding-left: 4px !important;
}

.input-append{
	margin-bottom: 1px !important;
}

.input_filtro{
	width: 12em !important;
	height: 2em !important;
	min-height: 2em !important;
}

.btn_filtro{
	padding: .1em !important;
	width: 5em !important;		
}

#filtro{
	width: 12em !important;
	min-height: 23px !important;
	height: 25px !important;
}

.btn_accion{
	padding-bottom: .1em !important;	
	padding-top: .1em !important;	
}

.dataTables_filter{
	margin-bottom: 5px !important;
	font-size: 14px !important;
	height: 18px !important;
	// padding: .1em !important;
}

.ui-state-active{
	border: none !important;
}

.ui-state-hover{
	border: none !important;
}

.ui-state-focus{
	border: none !important;
}

.ui-state-highlight{
	border: none !important;
}

.group{
	border-bottom: 1px solid #A19B9E !important;
	border-top: 1px solid #A19B9E !important;
	font-weight: bold
}

{% endblock %}

{% block stylesheets %}
<link href="{{ asset('bundles/cademreporte/css/demo_table.css') }}" rel="stylesheet">			
<link href="{{ asset('bundles/cademreporte/css/jquery.dataTables_themeroller.css') }}" rel="stylesheet">
<link href="{{ asset('bundles/cademreporte/css/redmond/jquery-ui.min.css') }}" rel="stylesheet">
{% endblock %}

{% block javascripts %}
<script src="{{ asset('bundles/cademreporte/js/jquery.dataTables.min.js') }}"></script>
<script src="{{ asset('bundles/cademreporte/js/dataTables.fixedColumns.js') }}"></script>
<script src="{{ asset('bundles/cademreporte/js/jquery.heatcolor.0.0.1.js') }}"></script>

<script>

var oTable;
var maxWidth={{max_width}};
var maxHeight;
var DatosAdicionales = [];
var matriz_totales = [];
var variable = parseInt({{variable}});
var aoColumnDefs = {{aoColumnDefs|raw}};
var columnas_reservadas = parseInt({{columnas_reservadas}});
var filtrar_por='sku';
var grupo='group';
var suffix='';

function preInitTabla()
{
	// Calcula el ancho máximo de la tabla	
	var anchoPantalla= screen.width;	
	// Corregir el maxwidth en base a la resolucion de la pantalla
	switch(anchoPantalla)
	{
		case 1366:						
			break;
		case 1360:
			maxWidth=maxWidth*1.1;
			break;
		case 1280:
			maxWidth=maxWidth*1.15;
			break;
		case 1024:
			maxWidth=maxWidth*1.3;
			break;
		case 800:
			maxWidth=maxWidth*1.25;
			break;
	}
	$('#tabla_resumen').css('max-width',maxWidth+'%');	
	maxHeight=400;		
}

function construirTabla()
{	
	$('#tabla_resumen').ready(function(){		
		oTable = $('#tabla_resumen').dataTable({
			"bProcessing": true,
			"bServerSide": true,
			"sAjaxSource": "{{ url_body_action }}",
			"fnServerData": function ( sSource, aoData, fnCallback ) {
				//AGREGAMOS LOS DATOS SOLO SI HAY
				if (DatosAdicionales.length > 0) for(i in DatosAdicionales) aoData.push(DatosAdicionales[i]);
				$.ajax( {
					"dataType": 'json', 
					"type": "POST", 
					"url": sSource, 
					"data": aoData, 
					"success": function(data){//QUE PASA SI FALLA?									
								matriz_totales=data.matriz_totales;	
								maxWidth=parseInt(data.max_width);																							
								// alert(JSON.stringify(matriz_totales));								
								fnCallback(data);								
								DatosAdicionales = [];//AL FINAL SE BORRAN
							}
				} )
				.done(function() { colorTotales(); })
				.fail(function() {  })
				.always(function() { quitarloader(); });
			},				
			"sScrollY": maxHeight+'px',
			"sScrollX": "100%",
			"sScrollXInner": maxWidth+'%',
			"bScrollCollapse": false,
			"bFilter": false,
			"bSort": false,
			"bDeferLoading": false,
			// "bSortClasses": false,
			"bInfo": false,
			"bPaginate": false,			
			// "sDom": "frtiS",				
			"bJQueryUI": true,
			"bAutoWidth": false, 			
			// "bScrollInfinite": true,
			"aoColumnDefs": aoColumnDefs,
			"aaSortingFixed": [[ 1, 'asc' ]],			
			"fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {									
								if(aData[0].length>40)
									$(nRow).children(':eq(0)').text(aData[0].substring(0,40).replace(/ /g,' ')+'...');
								else
									$(nRow).children(':eq(0)').text(aData[0].replace(/ /g,' '));							 
								$(nRow).attr('title',aData[0]);																
								
								$(nRow).attr('data-tt-parent-id',aData[2]);																
							},						
			"fnInitComplete": function() {					
					switch(parseInt(variable))
					{
						case 1:			
						case 5:							
							fixedColumn1();
							break;
						case 2:							
							suffix='.'+grupo;
							fixedColumn2();							
							break;							
					}
					listenerCelda();
				},	
			"oLanguage": {
				  "sProcessing": "<b>Procesando...</b>"
				},
			 "fnDrawCallback": function() {
					quitarloader();
				}
		});
		// var filtros='<label class="radio inline"><input type="radio" name="filtro" id="filtro_sku" class="btn_filtro" checked>SKU</label><label class="radio inline"><input type="radio" name="filtro" id="filtro_sala" class="btn_filtro">Sala</label>';
		var filtros="<button id='filtro_sku' title='FILTRO ACTIVO POR SKU' class='btn btn_filtro btn-warning ' type='button'><i class='icon-filter'></i> SKU</button><button id='filtro_sala' class='btn btn_filtro' type='button' title='FILTRO ACTIVO POR SALA'><i class='icon-filter'></i> SALA</button>";
		$('div.fg-toolbar:first').append("<div align='left' style='float:left;width:30%'><h5 style='float:left;margin:0em'>Tabla Detalle {{tag_variable}}: {% if tag_variable|lower in ['quiebre','presencia'] %} (%) {%else%} ($) {%endif%}</h5><div>");	
		// $("<div class='dataTables_filter' align='right' style='float:center;width:50%'><label>SALA: <input id='buscarsala' /></label></div>").appendTo('#tabla_resumen_wrapper .fg-toolbar:first');				 		
		$("<div class='dataTables_filter input-append' align='right' style='float:right;width:70%'>"+filtros+"<input id='filtro' class='span2 input_filtro' /><button id='boton_buscar' class='btn btn_accion' type='button' title='BUSCAR'><i class='icon-search'></i></button><button id='colorear' title='TERMOGRAMA' class='btn btn_accion' type='button'><i class='icon-eye-open'></i></button></div>").appendTo('#tabla_resumen_wrapper .fg-toolbar:first');				 				
		
		$('#boton_buscar').mousedown(function(){			
			var e = jQuery.Event("keydown");
			e.keyCode = 13; // # Some key code value
			$('#filtro').trigger(e);
		});
		
		$('.btn_filtro').mousedown(function(){
			$('.input-append button.btn_filtro').removeClass('btn-warning');
			$(this).addClass('btn-warning');			
			if($(this).attr('id')=='filtro_sku')
			{
				filtrar_por='sku';
			}
			else
			{
				filtrar_por='sala';				
			}
		});
		
		$('#colorear').mousedown(function(){
			if($(this).hasClass('btn-warning'))
			{
				$(this).removeClass('btn-warning');
				colorearCeldas(false,suffix);
			}
			else
			{
				$(this).addClass('btn-warning');
				colorearCeldas(true,suffix);
			}
		});			
	});	
}

function colorearCeldas(flag,suffix){
	
	if(flag)
	{
		$("#tabla_resumen tbody tr td"+suffix).heatcolor(
			function() {			
				return parseFloat($(this).text());
				},
				{ maxval: 0,
				minval: 100,
				colorStyle: 'greentored',
				lightness: 0.4, 
				reverseOrder: {% if tag_variable|lower in ['presencia']%} true {% else %}	false {% endif %}
				}		
		);
	}
	else
	{		
		$("#tabla_resumen tbody tr td").removeAttr('style');
		colorTotales();
	}	
}

function listenerFiltro()
{	
	var filtrado= false;
	var indice=0;
	var offset=0;

	$('#filtro').keydown(function(e){			
		switch(e.keyCode)
		{			
			case 13:	
				e.preventDefault();
				switch(filtrar_por)
				{
					case 'sku':
						var needle=$('#filtro').val().toUpperCase();					
						var delta=$('table.DTFC_Cloned tbody tr:first').height();
						delta=0.97*delta;
						offset=delta;
						var oSettings = oTable.fnSettings();
						var ventana= maxHeight;					
						
						if(needle=='')
						{
							$('.matched').removeClass('matched');	
							$('.matched_active').removeClass('matched_active');	
							return false;
						}
						if(!filtrado)
						{
							filtrado=true;							
							var hit=false;
							// $('.ui-state-active').removeClass('ui-state-active');				
							$('.matched').removeClass('matched');	
							$('.matched_active').removeClass('matched_active');	
							$('table.DTFC_Cloned tbody tr').each(function(){						
								var haystack=$(this).attr('title').toString().toUpperCase();					
								if (haystack.indexOf(needle)!=-1) {															
									if(!hit)							
										clase='matched_active';														
									else							
										clase='matched';
																							
									$(this).addClass(clase);
									
									$('#tabla_resumen tbody').children(':eq('+$(this).index()+')').addClass(clase);
									hit=true;							
								}								
							});
							if(hit)
							{													
								offset=($('.matched_active:first').index())*delta;
								$('.dataTables_scrollBody').animate({ scrollTop: offset });		
							}
							else
							{
								alert('El item no fue encontrado');
								$('#filtro').val('');
								$('.dataTables_scrollBody').animate({ scrollTop: 0 });	
							}
						}
						else
						{									
							offset=($('.matched:first').index())*delta;
							if($('.matched').length<=2)
								filtrado=false;
							$('.matched_active').removeClass('matched_active');	
							$('#tabla_resumen tbody tr.matched:first').addClass('matched_active');
							$('#tabla_resumen tbody tr.matched:first').removeClass('matched');	
							
							$('table.DTFC_Cloned tbody tr.matched:first').addClass('matched_active');
							$('table.DTFC_Cloned tbody tr.matched:first').removeClass('matched');						
							
							$('.dataTables_scrollBody').animate({ scrollTop: offset });						
						}
					break;
					
					case 'sala':
						var needle=$('#filtro').val().toUpperCase();					
						var delta=$('#tabla_resumen tbody tr:first td').eq(-2).width();
						delta = delta*0.92;										
						var oSettings = oTable.fnSettings();
						var ventana= 1000;									
						var posicion;
						if(needle=='')
						{
							$('th div.btn-warning').removeClass('btn-warning');	
							$('th div.btn-success').removeClass('btn-success');	
							return false;
						}
						if(!filtrado)
						{					
							$('th div.btn-warning').removeClass('btn-warning');	
							$('th div.btn-success').removeClass('btn-success');	
							filtrado=true;							
							var hit=false;
							// $('.ui-state-active').removeClass('ui-state-active');				
							$('th.btn-warning').removeClass('btn-warning');	
							$('th.btn-success').removeClass('btn-success');	
							$('.DataTables_sort_wrapper').slice(2,$('.DataTables_sort_wrapper').length-1).each(function(){															
								var haystack=$(this).parent().attr('title').toString().toUpperCase();					
								var haystack2=$('th[rowspan=1]:eq('+$(this).parent().index()+')').attr('title').toString().toUpperCase();													
								if (haystack.indexOf(needle)!=-1 || haystack2.indexOf(needle)!=-1) {																																										
									if(!hit)							
										clase='btn-success';														
									else							
										clase='btn-warning';																					
									$(this).addClass(clase);																												
									hit=true;							
								}
								// if(!hit)
									// offset=offset+2*delta/3;						
							});					
							if(hit)
							{											
								offset=($('.btn-success').parent().index())*delta;
								
								$('.dataTables_scrollBody').animate({ scrollLeft: offset });		
							}
							else
							{
								alert('El item no fue encontrado');
								$('#filtro').val('');
								$('.dataTables_scrollBody').animate({ scrollLeft: 0 });	
							}
						}
						else
						{											
							offset=($('.btn-success').parent().index())*delta;																							
							
							if($('th div.btn-warning').length<=1)
								filtrado=false;					
							$('th div.btn-success').removeClass('btn-success');	
							$('th div.btn-warning:first').addClass('btn-success');
							$('th div.btn-warning:first').removeClass('btn-warning');	
						
							$('.dataTables_scrollBody').animate({ scrollLeft: offset });						
						}
					break;
				}
			break;	
			
			default:
				filtrado=false;				
			break;
		}
	});
}

function fixedColumn1()
{
		new FixedColumns( oTable, {
		"sHeightMatch": "none",		
		"fnDrawCallback": function ( left, right ) {
			/////////////////////////// Esta parte añade las filas de agregacion a la tabla //////////////////////////////////
			var oSettings = oTable.fnSettings();
			if ( oSettings.aiDisplay.length === 0 )
			{
				return;
			}

			var nGroup, nCell, iIndex, sGroup;
			var sLastGroup = "", iCorrector=0;
			var nTrs = $('#tabla_resumen tbody tr');
			// var iColspan = nTrs[0].getElementsByTagName('td').length;
            var cols=oTable.fnSettings().aoColumns.length-2;
			var row=0;			
			
			for ( var i=0 ; i<nTrs.length ; i++ )
			{
				iIndex = oSettings._iDisplayStart + i;

				sGroup = oSettings.aoData[ oSettings.aiDisplay[iIndex] ]._aData[1];
				
				if ( sGroup != sLastGroup )
				{
              		var nGroup = document.createElement('tr');
					// // Se agrgega una columna correspondiente a la columna oculta					
					var nCell;
					nCell = document.createElement( 'td' );						 
					nCell.className = grupo;																									
					nCell.innerHTML = 0;															
					nGroup.appendChild( nCell ); 										
                  					
                    for(var j=0 ; j< cols ; j++)
					{
						nCell = document.createElement( 'td' );						 
						nCell.className = grupo;														
						nCell.innerHTML = matriz_totales[row][j];																	
						nGroup.appendChild( nCell );						 
					}					
                    ++row;
                    nTrs[i].parentNode.insertBefore( nGroup, nTrs[i] );
					// Se crea atributo que asocie la fila de agregacion con sus filas hijas
					var att=document.createAttribute("data-tt-id");
					att.value=sGroup;
					// Se añade fila de agregacion para tabla principal
					nTrs[i].previousSibling.setAttributeNode(att);			
                    
					// /* Cell to insert into the frozen columns */
					
                    nGroup = document.createElement( 'tr' );
					nCell = document.createElement( 'td' );
					nCell.className = grupo+" tag";
					nCell.innerHTML = sGroup.toUpperCase();
					nGroup.setAttribute('title',sGroup.toUpperCase());	
					nGroup.appendChild( nCell );
                    // Se añade fila de agregacion para tabla fija
					$(nGroup).insertBefore( $('tbody tr:eq('+(i+iCorrector)+')', left.body)[0] );
					
					iCorrector++;
					sLastGroup = sGroup;
				}
			}
			var nGroup = document.createElement('tr');
			// Se agrgega una columna correspondiente a la columna oculta			
			var nCell;
			nCell = document.createElement( 'td' );						 
			nCell.className =grupo;																									
			nCell.innerHTML = 0;															
			nGroup.appendChild( nCell ); 				
			
			for(var j=0 ; j< cols ; ++j)
			{
				nCell = document.createElement( 'td' );						 
				nCell.className = grupo;																				
				// alert(matriz_totales[row][j]);
				nCell.innerHTML = matriz_totales[row][j];																
				nGroup.appendChild( nCell );						 
			}					
			$(nGroup).insertBefore( $('tbody tr:eq('+(0)+')', right.body)[0] );						
			// Se crea atributo que asocie la fila de agregacion con sus filas hijas
			var att=document.createAttribute("data-tt-id");
			att.value="TOTALES";
			// Se añade fila de agregacion para tabla principal
			nTrs[0].previousSibling.setAttributeNode(att);				
			
			// /* Cell to insert into the frozen columns */
			
			nGroup = document.createElement( 'tr' );
			nCell = document.createElement( 'td' );
			nCell.className = grupo+" tag";
			nCell.innerHTML = "TOTAL GENERAL";
			nGroup.appendChild( nCell );
			nGroup.setAttribute('title',"TOTAL GENERAL");	
			// Se añade fila de agregacion para tabla fija
			$(nGroup).insertBefore( $('tbody tr:eq(0)', left.body)[0] );			
			$('.DTFC_LeftFootWrapper').hide();
		}		
	});	
	listenerFiltro();
	//FIX PARA CHROME
	$('.DTFC_LeftWrapper:first').css('height', ($('.DTFC_LeftWrapper:first').height()-15) + 'px'  );		
}

function fixedColumn2()
{	
		new FixedColumns( oTable, {
		"sHeightMatch": "none",		
		"iLeftColumns": 2,
		"fnDrawCallback": function ( left, right ) {
			/////////////////////////// Esta parte añade las filas de agregacion a la tabla //////////////////////////////////
			var oSettings = oTable.fnSettings();
			if ( oSettings.aiDisplay.length === 0 )
			{
				return;
			}

			var nGroup, nCell, iIndex, sGroup;
			var sLastGroup = "", iCorrector=0;
			var nTrs = $('#tabla_resumen tbody tr');
			// var iColspan = nTrs[0].getElementsByTagName('td').length;
            var cols=oTable.fnSettings().aoColumns.length-2;
			var row=0;			
			
			for ( var i=0 ; i<nTrs.length ; i++ )
			{
				iIndex = oSettings._iDisplayStart + i;

				sGroup = oSettings.aoData[ oSettings.aiDisplay[iIndex] ]._aData[2];				
				
				if ( sGroup != sLastGroup )
				{					
              		var nGroup = document.createElement('tr');
					// // Se agrgega una columna correspondiente a la columna oculta					
					var nCell;
					nCell = document.createElement( 'td' );						 
					nCell.className = grupo;																									
					nCell.innerHTML = 0;															
					nGroup.appendChild( nCell ); 										
                  					
                    for(var j=0 ; j< cols ; j++)
					{
						nCell = document.createElement( 'td' );						 
						nCell.className = grupo;														
						nCell.innerHTML = matriz_totales[row][j];																	
						nGroup.appendChild( nCell );						 
					}									
					nGroup.setAttribute('data-tt-id',sGroup);	
					nGroup.setAttribute('class','parent');	
                    ++row;
                    nTrs[i].parentNode.insertBefore( nGroup, nTrs[i] );
					// Se crea atributo que asocie la fila de agregacion con sus filas hijas					
					// Se añade fila de agregacion para tabla principal					
                    
					// /* Cell to insert into the frozen columns */
					
                    nGroup = document.createElement( 'tr' );
					
					nCell = document.createElement( 'td' );
					nCell.className = grupo+" tag";
					nCell.innerHTML = sGroup.toUpperCase();
					nGroup.setAttribute('title',sGroup.toUpperCase());	
					nGroup.appendChild( nCell );
										
					nCell = document.createElement( 'td' );
					nCell.className = grupo;
					nCell.innerHTML = "% INC.";					
					nGroup.setAttribute('title',sGroup.toUpperCase());	
					nGroup.appendChild( nCell );
										
                    // Se añade fila de agregacion para tabla fija
					$(nGroup).insertBefore( $('tbody tr:eq('+(i+iCorrector)+')', left.body)[0] );
					
					iCorrector++;
					sLastGroup = sGroup;
				}
			}
			var nGroup = document.createElement('tr');
			// Se agrgega una columna correspondiente a la columna oculta			
			var nCell;
			nCell = document.createElement( 'td' );						 
			nCell.className =grupo;																									
			nCell.innerHTML = 0;															
			nGroup.appendChild( nCell ); 				
			
			for(var j=0 ; j< cols ; ++j)
			{
				nCell = document.createElement( 'td' );						 
				nCell.className = grupo;																				
				// alert(matriz_totales[row][j]);
				nCell.innerHTML = matriz_totales[row][j];																
				nGroup.appendChild( nCell );						 
			}					
			$(nGroup).insertBefore( $('tbody tr:eq('+(0)+')', right.body)[0] );						
			// Se crea atributo que asocie la fila de agregacion con sus filas hijas					
			// Se añade fila de agregacion para tabla principal
			nGroup.setAttribute('data-tt-id',"TOTALES");				
			
			// /* Cell to insert into the frozen columns */
			
			nGroup = document.createElement( 'tr' );
			
			nCell = document.createElement( 'td' );
			nCell.className = grupo+" tag";
			nCell.innerHTML = "TOTAL GENERAL";
			nGroup.appendChild( nCell );
			
			nCell = document.createElement( 'td' );
			nCell.className = grupo;
			nCell.innerHTML = "% INC.";
			nGroup.appendChild( nCell );
			
			nGroup.setAttribute('title',"TOTAL GENERAL");	
			
			// Se añade fila de agregacion para tabla fija
			$(nGroup).insertBefore( $('tbody tr:eq(0)', left.body)[0] );			
			$('.DTFC_LeftFootWrapper').hide();
		}		
	});	
	// new FixedColumns( oTable, {
		// "sHeightMatch": "none",	
		// "iLeftColumns": 2,
	// });		
	calcular_incumplimiento();
	listenerFiltro();
	//FIX PARA CHROME
	$('.DTFC_LeftWrapper:first').css('height', ($('.DTFC_LeftWrapper:first').height()-15) + 'px'  );	
}

function colorTotales(){
	$('.tag').each(function(){
		$(this).css('cursor','pointer');
		// $(this).parent().attr('title',$(this).text());
	});
	switch(parseInt(variable))
	{
		case 1:
		case 2:
		case 5:
			var color_fondo = 'rgb(255, 235, 158)';
			$('.DTFC_Cloned tbody tr:first td').css({
				'background-color':color_fondo,
				'font-weight':'bold'
			});
			$('.table:not(.DTFC_Cloned) tbody tr:first td').css({
				'background-color':color_fondo,
				'font-weight':'bold'
			});
			$('.table:not(.DTFC_Cloned) tbody tr td:last-of-type:not(.group)').css({
				'background-color':color_fondo,
				'font-weight':'bold'
			});
			$('.table:not(.DTFC_Cloned) tbody tr td:last-of-type:not(.group)').addClass(grupo);
			$('.DTFC_Cloned tbody tr td:first-of-type:not(.group)').css({
				'font-weight':'bold'
				// 'background-color':'rgb(238, 236, 255)',
				// 'color': 'black',
			});	
			break;
	}	
}

function calcular_incumplimiento()
{	
	var indice=parseInt($( "#slider-range-min" ).slider( "value" ));
	var total=0;
	var cont=0;
	var n=$('.DataTables_sort_wrapper').length-3;
	
	$('#tabla_resumen tbody tr').each(function(){		
		
		var politica=parseInt($('table.DTFC_Cloned tbody').children(':eq('+$(this).index()+')').children(':eq(1)').text());				
		var total_producto=0;
		var cont_producto=0;
		$(this).children().each(function(i){						
			if(i>1 && i<n && !$(this).hasClass(grupo))
			{				
				// alert($(this).text());
				var precio= parseInt($(this).text());					
				if(precio.toString()!='NaN')
				{									
					if(Math.abs(precio-politica)>indice*politica/100)
					{						
						$(this).addClass('fueraRango');
						cont++;
						cont_producto++;
					}
					else
						$(this).removeClass();					
					total++;
					total_producto++;
				}					
			}		
		});
		$(this).children(':eq('+n+')').text((100*cont_producto/total_producto).toFixed(1));		
	});		
	$('#pctje_incumplimiento').text((100*cont/total).toFixed(1)+'%');
	$('#pctje_incumplimiento').attr('valor',(100*cont/total).toFixed(1));
	calcularTotalesPrecio();
}

function calcularTotalesPrecio(){
    //////////////// Esta parte calcula los valores de las agregaciones (SEGMENTO Y TOTAL) //////////////////////       
	if($('#colorear').hasClass('btn-warning')){		
		colorearCeldas(false,suffix);		
	}
	var cols=oTable.fnSettings().aoColumns.length-2;
	
	var totalesGlobales=new Array();
	var totalesSalas=new Array();
	var contadoresSalas=new Array();
	var sumaCategoria= 0;	
	var contCategoria= 0;
	var sumaSala= 0;	
	var contSala= 0;	
	var total;	
	
	for (var i = 0; i < cols-1; i++) totalesGlobales[i] = 0;		 
	for (var i = 0; i < cols-1; i++) contadoresSalas[i] = 0;		 
	for (var i = 0; i < cols-1; i++) totalesSalas[i] = 0;		  
	
	for (var i = 0; i < cols-1 ; i++) totalesGlobales[i] = 0;
	$('#tabla_resumen tbody tr.parent').each(function(){   	  
	  var totalesParciales= new Array();
	  var contadoresParciales= new Array();	  
	  for (var i = 0; i < cols-1; i++) totalesParciales[i] = 0;		 
	  for (var i = 0; i < cols-1; i++) contadoresParciales[i] = 0;		 
		var cont=0;		
		sumaCategoria=0;
		contCategoria=0;
		$('#tabla_resumen tbody tr[data-tt-parent-id="'+$(this).attr('data-tt-id')+'"]').each(function(){						
		
			// alert($(this).html());			
			var j=0;
			$(this).children().slice(2,cols).each(function(){				
				// alert($(this).html());
				// alert("fueraRango="+$(this).hasClass('fueraRango')? 1:0);												
	
				if(parseInt($(this).text()).toString()!="NaN")
				{										
					totalesParciales[j]+=$(this).hasClass('fueraRango')? 1:0;					
					totalesSalas[j]+=$(this).hasClass('fueraRango')? 1:0;					
					contadoresParciales[j]++;					
					contadoresSalas[j]++;					
					sumaCategoria+=$(this).hasClass('fueraRango')? 1:0;									
					contCategoria++;					
				}				
				j++;
			});
			cont++;
		});	  
		// alert(totalesParciales);
		var j=0;
	  	 	  
		$(this).children().slice(2,cols).each(function(){
			var valor=parseFloat((totalesParciales[j]/contadoresParciales[j])*100);
			$(this).text(valor.toString()=='NaN'?'-':valor.toFixed(1));
			totalesGlobales[j]=totalesGlobales[j]+totalesParciales[j];              			
			j++;
		});		
		
		$(this).children(':eq('+cols+')').text(parseFloat((sumaCategoria/contCategoria)*100).toFixed(1));		
		// totalesGlobales[j]=(parseFloat((sumaCategoria/contCategoria)*100).toFixed(1));
	});  				
	$('tr[data-tt-id=TOTALES]').children().slice(2,cols).each(function(j){
		$(this).text(parseFloat((totalesSalas[j]/contadoresSalas[j])*100).toFixed(1));
	});
	$('tr[data-tt-id=TOTALES]').children(':eq('+cols+')').text($('#pctje_incumplimiento').attr('valor'));
	if($('#colorear').hasClass('btn-warning')){		
		colorearCeldas(true,suffix);				
	}	
}

function construirSlider(rango_precio){
	
	$( "#slider-range-min" ).slider({
		  range: "min",
		  value: rango_precio,
		  min: 0,
		  max: 100,
		  slide: function( event, ui ) {
			$( "#amount" ).val( ui.value + '%');	
		  },
		  change: function( event, ui ) {			
			calcular_incumplimiento();			
		  }
	});
	$( "#amount" ).val( $( "#slider-range-min" ).slider( "value" ) + '%');	
}

$(document).ready(function () {		
			
	var callbacks = $.Callbacks();	
	callbacks.add( preInitTabla() );
	callbacks.add( construirTabla() );
	alerta('Advertencia','Esta búsqueda retornó muchas salas, es posible que la carga y la respuesta tarden más de lo habitual. Se recomienda filtrar la búsqueda o utilizar "Chrome"');			
	$('.alert').hide();
	// callbacks.add( fixedColumn() );						
	
	{% if rango_precio is defined %}
		construirSlider({{rango_precio}});
	{% endif %}

	$(window).bind('resize', function () {
		// $('.DTFC_Cloned').find('.DataTables_sort_icon').append('<img class="loader" alt="" style="float:left;margin-left:20px" src="/bundles/cademreporte/images/loader-minitrans.gif">');	
		oTable.fnAdjustColumnSizing();
	});	
	
	/*
	$(window).bind('resize', function () {
		oTable.fnAdjustColumnSizing();
	});
	*/	
	$('#tabla_resumen_wrapper tr th').click(function() {
		var label= $(this).text().trim();
		$('.ui-state-active').removeClass();
		$(this).addClass('ui-state-active');
		$(".row_selected").removeClass("row_selected");
	});

	//BOTON PARA GENERAR EXCEL
	$('#excel').click(function() {
		alert('aaa');
	});
	
	//GUARDA QUE BOTON SE PRESIONA EN EL FORMULARIO
	var $boton_presionado;
	$('form#filtros input').click(function() {
		$boton_presionado = $(this);
	});
	
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	$('form#filtros').submit(function() {
		$('.alert').hide();
		if($boton_presionado.attr("value") === "Limpiar Filtros"){
			$('form#filtros select[multiple="multiple"] option').prop('selected',true);
			$('#f_region_Region').change();
		}
		else procesarform(); //SE PROCESA FORMULARIO
		return false;
	});
	
	//REGION
	$(document).on('change', '#f_region_Region', function(){
		//RECARGAR PROVINCIA
		var datos = $(this).serialize();
		$('#f_provincia_Provincia').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_region') }}", datos, function(data) {
			$('#f_provincia').html(data);
		},'html')
		.done(function() {quitarloader(); $('#f_provincia_Provincia').change();})
		.fail(function() { alert("Se produjo un error al cargar las provincias");quitarloader();})
		.always(function() { /*alert("finished");*/});
	});
	
	//PROVINCIA
	$(document).on('change', '#f_provincia_Provincia', function(){
		//RECARGAR COMUNA
		var datos = $(this).serialize();
		$('#f_comuna_Comuna').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_provincia') }}", datos, function(data) {
			$('#f_comuna').html(data);
		},'html')
		.done(function() { /*alert("second success");*/ })
		.fail(function() { alert("Se produjo un error al cargar las comunas"); })
		.always(function() { /*alert("finished");*/ quitarloader();});
	});		
});
	
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	function procesarform(){
		//SE CLONA FORM Y SE ARREGLA LOS ITEM SELECCIONADOS POR USUARIO
		var cform = $('form#filtros').clone();
		cform.find('option').removeAttr("selected");
		var originform = $('form#filtros option');
		originform.each(function(i) {
			if($(this).is(':selected')) cform.find('option').eq(i).attr("selected", true);
		});
		//SE QUITA REGION Y COMUNA
		cform.find('#f_region').remove();
		cform.find('#f_provincia').remove();
		cform.find('input').remove();
		
		var dataform = cform.serializeArray();
		
		DatosAdicionales = dataform;
		$('form#filtros input').last().after('<img id="tabla-loader" class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		recargarTabla();
		// oTable.fnDraw();//SI NO FUNCIONA ESTO USAR LA DE ABAJO
		// oTable.fnReloadAjax();
	}
	
	function recargarTabla()
	{		
		$.get("{{ url_header_action }}",DatosAdicionales,function(data){
			switch('{{tag_variable|lower}}')
			{
				case 'quiebre':
				case 'presencia':
					var minimo=3;
					break;
				case 'precio':
					var minimo=4;
					break;
			}			
			if(data.head.length<=minimo)
			{
				alert('Esta búsqueda no devolvió resultados. Es posible que no existan datos para este cruce en la medición actual.\n\nSi no es este el caso, por favor revise los filtros en la sección izquierda de la página');
				return false;
			}	
			maxWidth=parseInt(data.max_width);			
			aoColumnDefs=JSON.parse(data.aoColumnDefs);			
			// Primero destruimos la tabla si existe (la removemos del DOM)	
			var ex = document.getElementById('tabla_resumen');
			if ( $.fn.DataTable.fnIsDataTable( ex ) ) {
			  oTable.fnDestroy(true);
			}				
			// Luego generamos el html de la tabla y lo añadimos al DOM
			var table= document.createElement( 'table' );
			var thead= document.createElement( 'thead' );
			table.setAttribute('id',"tabla_resumen");	
			table.setAttribute('class',"tabla_resumen table table-bordered display");								
			var tableHead = document.createElement( 'tr' );	 //tableheader 					
			var cols=data.head.length-1;
			$(data.head).each(function(key,value){				
				var tableHeading = document.createElement( 'th' );											
				
				if(key<columnas_reservadas || key==cols)
				{					
					tableHeading.innerHTML = value;
					tableHeading.setAttribute('rowspan',2);				
					tableHeading.setAttribute('title',value);		
					tableHeading.setAttribute('style',"vertical-align:middle");	
				}
				else
				{					
					tableHeading.innerHTML = value['cod_sala'];										
				}												
				tableHead.appendChild( tableHeading );				
			});	
			thead.appendChild( tableHead );
			tableHead = document.createElement( 'tr' );	 //tableheader 				
			$(data.head).each(function(key,value){										
				if(key>=columnas_reservadas && key!=cols)
				{					
					var tableHeading = document.createElement( 'th' );						
					tableHeading.innerHTML = value['nom_sala'].substring(0,16)+'...';
					tableHeading.setAttribute('title',value['nom_sala']);		
					tableHead.appendChild( tableHeading );									
				}																		
			});							
			thead.appendChild( tableHead );
			table.appendChild( thead );				
			document.getElementById('container').appendChild(table);		
			if(data.head.length>30)
				$('.alert').show();
			// Luego recalculamos el ancho maximo en base a la cardinalidad del head
			preInitTabla();			
			// Luego volvemos a construir la tabla con dataTables
			construirTabla();
		},"json")
		.done(function() {  })
		.fail(function() {  })
		.always(function() { quitarloader('#tabla-loader'); });
	}
		
	function quitarloader(id_){
		if(typeof id_ == 'undefined' || id_ == null){ if($('.loader').length > 0) $('.loader').remove();}
		else{
			$(id_+'.loader').remove();
		}
	}	
	
	function alerta(strong,text){
		var alerttipo = '<br><div class="alert alert-info">' +
		  '<button id="alerta" type="button" class="close" data-dismiss="alert" style="margin:1em">×</button>'+
		  '<strong>'+strong+'</strong> '+text+
		'</div>';
		$('#container').parent().append(alerttipo);
	}			
	
	function listenerCelda(){	
	
	var clase='ui-state-highlight';
	
		$("#tabla_resumen tbody tr td div").mouseenter(function(e){						
			var target=$(e.target);		
			$('.'+clase).removeClass(clase);
			$(this).addClass(clase);
			$('thead tr').children(':eq('+$(target).parent().index()+')').children().addClass(clase);
			$('.DTFC_Cloned tbody').children(':eq('+$(target).parent().parent().index()+')').children().addClass(clase);
			$(document).keydown(function(e){							
				if(e.keyCode==17)	
					$(target).css('cursor','pointer');								
			});
			$(document).keyup(function(e){														
				if(e.keyCode==17)															
					$(target).css('cursor','default');															
			});
		});	
		
		$("#tabla_resumen tbody").mouseleave(function(e){						
			$('.'+clase).removeClass(clase);
		});
	}

	
 </script>
{% endblock %}