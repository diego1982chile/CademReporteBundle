{% extends '::base.html.twig' %}

{% set url_excel = path('quiebre_detalle_excel') %}
{#% set url_body = path('quiebre_detalle_body') %#}
{#% set url_header = path('quiebre_detalle_header') %#}
{% set url_body_action = path(body_action) %}
{% set url_header_action = path(header_action) %}

{% block title %}Cadem Analytics{% endblock %}

{% block filtro %}
	<form id="filtros" action="" method="post" >
		{% for form in forms %}
				{{ form_widget(form) }}
		{% endfor %}
		<input class="btn btn-primary" type="submit" value="Filtrar" />
		<input class="btn btn-warning" type="submit" value="Limpiar Filtros" />
	</form>
{% endblock %}

{% block body %}
    <div class="span9">
		<div class="container-fluid well" style="padding-top:0">
			<h4>Detalle {{tag_variable}}</h4>
			<div class="hero-unit" style="padding:15px;margin-bottom:20px">												
				<div id="container" class="row-fluid">
					<table id="tabla_resumen" class="tabla_resumen table table-bordered display">                      
						<thead>
							<tr>
								{% for key,value in head %}
								{% if loop.index>columnas_reservadas and loop.index!=head|length %}										
								<th>
									{{key}}
								</th>
								{% else %}	
								<th rowspan="2" style='vertical-align:middle'>
									{{value}}
								</th>
								{% endif %}		
								{% endfor %}
							</tr>
							<tr>
								{% for key,value in head %}
								{% if loop.index>columnas_reservadas and loop.index!=head|length %}
								<th title='{{ value }}'>
									{{value[0:16]}}...											
								</th>
								{% endif %}		
								{% endfor %}
							</tr>
						</thead>                        					                   
					</table>				
				</div>		
				{% if variable=='1' %}
				<table id='controls' width='100%' style='float:right'>
					<thead>
						<tr>							
							<th width='10%' class='ui-widget-content' style='font-size:medium'>
								<label style=';color:#2e6e9e'>
									Presencia:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:green;height:1.9em'>
								</div>
							</th>
							<th width='10%' class='ui-widget-content'>
								<label style=';color:#2e6e9e'>
									Quiebre:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:red;height:1.9em'>
								</div>
							</th>
							<th class='ui-widget-content' width='15%'>
								<label style=';color:#2e6e9e'>
									No planogramado:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:grey;height:1.9em'>
								</div>
							</th>
							</th>							
							<th width='10%'>
								<a target="_blank" href="{{ url_excel }}"><label>Bajar Excel</label></a>
							</th>
						</tr>
					</thead>
				</table>		
				{% else %}
				<table id='controls' width='100%'>
					<thead>
						<tr >
							<th width='5%' class='ui-widget-content'>							
								<label for="amount" style=';color:#2e6e9e' >Índice:</label>
							</th>
							<th width='5%' class='ui-widget-content'>
								<input type="text" id="amount" style="font-size:1.5em; color:#2e6e9e; font-weight: bold; width:2.5em; margin-top:.5em" />
							</th>  							
							<th width='20%' class='ui-widget-content'>
								<div id="slider-range-min"></div>
							</th>
							<th width='5%' class='ui-widget-content'>
								<label id='pctje_incumplimiento' style="font-size:1.5em; color:#2e6e9e; font-weight: bold; width:2.5em; margin-top:.5em;color:red" title='PORCENTAJE FUERA DE RANGO'>
								</label>								
							</th>
							<th width='10%' class='ui-widget-content'>
								<label style=';color:#2e6e9e'>
									Fuera de rango:
								</label>
							</th>
							<th width='10%' class='ui-widget-content'>
								<div style='background:red;height:1.9em'>
								</div>
							</th>
							<th width='10%'>
								<a target="_blank" href="{{ url_excel }}"><label>Bajar Excel</label></a>
							</th>
						</tr>
					</thead>
				</table>
				{% endif %}								
			</div>					        
		</div>
	</div>
{% endblock %}

{% block customstyles %}
div.dataTables_scroll { 
	clear: both !important; 
	}	

{% if variable=='1' %}
table tbody tr{ 
	height: 1.1em !important;
} 
{% endif %}

td{
	text-align: center !important;
	font-size: .55em !important;
	padding: 0em !important;
}

th{
	font-size: .55em !important;
	text-align: center !important;
	padding: 0em !important;
}
	
.head{
	text-align: left !important;
}	

span.indenter{
	padding-left:0em !important;
}

.tag{
	text-align: left !important;
}

.tag2{
	vertical-align: middle !important;
	padding-left: .5em !important;
	padding-right: .5em !important;	
}

/* Block out what is behind the fixed column's header and footer */
table.DTFC_Cloned thead,
table.DTFC_Cloned tfoot {
	background-color: white !important;
}

#controls thead tr th{
	padding-right: 1em !important;
	padding-left: 1em !important;
    vertical-align: middle !important;
}

/* Block out the gap above the scrollbar on the right, when there is a fixed
 * right column
 */
div.DTFC_Blocker {
	background-color: white !important;
}

.fueraRango{
	background:red;
	color:white;
}

div.DataTables_sort_wrapper {
	padding-right: 4px !important;
	padding-left: 4px !important;
}

{% endblock %}

{% block stylesheets %}
<link href="{{ asset('bundles/cademreporte/css/demo_table.css') }}" rel="stylesheet">			
<link href="{{ asset('bundles/cademreporte/css/jquery.dataTables_themeroller.css') }}" rel="stylesheet">
<link href="{{ asset('bundles/cademreporte/css/redmond/jquery-ui.min.css') }}" rel="stylesheet">
{% endblock %}

{% block javascripts %}
<script src="{{ asset('bundles/cademreporte/js/jquery.dataTables.min.js') }}"></script>
<script src="{{ asset('bundles/cademreporte/js/dataTables.fixedColumns.js') }}"></script>

<script>

var oTable;
var maxWidth={{max_width}};
var maxHeight;
var DatosAdicionales = [];
var matriz_totales = [];
var variable = parseInt({{variable}});
var aoColumnDefs = {{aoColumnDefs|raw}};
var columnas_reservadas = parseInt({{columnas_reservadas}});

function preInitTabla()
{
	// Calcula el ancho máximo de la tabla	
	var anchoPantalla= screen.width;	
	// Corregir el maxwidth en base a la resolucion de la pantalla
	switch(anchoPantalla)
	{
		case 1366:						
			break;
		case 1360:
			maxWidth=maxWidth*1.1;
			break;
		case 1280:
			maxWidth=maxWidth*1.15;
			break;
		case 1024:
			maxWidth=maxWidth*1.3;
			break;
		case 800:
			maxWidth=maxWidth*1.25;
			break;
	}
	$('#tabla_resumen').css('max-width',maxWidth+'%');
	maxHeight=400;		
}

function construirTabla()
{
	$('#tabla_resumen').ready(function(){		
		oTable = $('#tabla_resumen').dataTable({
			"bProcessing": true,
			"bServerSide": true,
			"sAjaxSource": "{{ url_body_action }}",
			"fnServerData": function ( sSource, aoData, fnCallback ) {
				//AGREGAMOS LOS DATOS SOLO SI HAY
				if (DatosAdicionales.length > 0) for(i in DatosAdicionales) aoData.push(DatosAdicionales[i]);
				$.ajax( {
					"dataType": 'json', 
					"type": "GET", 
					"url": sSource, 
					"data": aoData, 
					"success": function(data){//QUE PASA SI FALLA?									
								matriz_totales=data.matriz_totales;	
								maxWidth=parseInt(data.max_width);																							
								// alert(JSON.stringify(matriz_totales));
								fnCallback(data);
								DatosAdicionales = [];//AL FINAL SE BORRAN
							}
				} )
				.done(function() { colorTotales(); })
				.fail(function() {  })
				.always(function() { quitarloader(); });
			},	
			// "bDeferRender": true,
			"sScrollY": maxHeight+'px',
			"sScrollX": "100%",
			"sScrollXInner": maxWidth+'%',
			"bScrollCollapse": true,
			"bFilter": false,
			"bSort": false,
			"bInfo": false,
			"bPaginate": false,			
			"bJQueryUI": true,
			"bAutoWidth": false, 
			// "bScrollInfinite": true,
			"aoColumnDefs": aoColumnDefs,
			"aaSortingFixed": [[ 1, 'asc' ]],
			"sPaginationType": "full_numbers",		
			"fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {	
								switch(variable)
								{
									case 1:
										var col=0;
										break;
									case 2:
										var col=1;
										break;										
								}
								if(aData[0].length>14)
									$(nRow).children(':eq(0)').text(aData[0].substring(0,14).replace(/ /g,'_')+'...');
								else
									$(nRow).children(':eq(0)').text(aData[0].replace(/ /g,'_'));									
								if(aData[col].length>40)
									$(nRow).children(':eq('+col+')').text(aData[col].substring(0,40).replace(/ /g,'_')+'...');
								else
									$(nRow).children(':eq('+col+')').text(aData[col].replace(/ /g,'_'));							 
								$(nRow).attr('title',aData[col]);		  
							},						
			"fnInitComplete": function() {
					switch(parseInt(variable))
					{
						case 1:														
							fixedColumn1();
							break;
						case 2:							
							fixedColumn2();
							break;							
					}								  
				},	
			"oLanguage": {
				  "sProcessing": "<b>Procesando...</b>"
				},
			 "fnDrawCallback": function() {
					quitarloader();
				}
		});
		 $('div.fg-toolbar:first').append("<h5 style='float:left;margin:0em'>Tabla Detalle {{tag_variable}}: (%)</h5>");		
	});	
}

function fixedColumn1()
{
		new FixedColumns( oTable, {
		"sHeightMatch": "none",
		"fnDrawCallback": function ( left, right ) {
			/////////////////////////// Esta parte añade las filas de agregacion a la tabla //////////////////////////////////
			var oSettings = oTable.fnSettings();
			if ( oSettings.aiDisplay.length === 0 )
			{
				return;
			}

			var nGroup, nCell, iIndex, sGroup;
			var sLastGroup = "", iCorrector=0;
			var nTrs = $('#tabla_resumen tbody tr');
			// var iColspan = nTrs[0].getElementsByTagName('td').length;
            var cols=oTable.fnSettings().aoColumns.length-2;
			var row=0;
			
			for ( var i=0 ; i<nTrs.length ; i++ )
			{
				iIndex = oSettings._iDisplayStart + i;

				sGroup = oSettings.aoData[ oSettings.aiDisplay[iIndex] ]._aData[1];
				
				if ( sGroup != sLastGroup )
				{
              		var nGroup = document.createElement('tr');
					// // Se agrgega una columna correspondiente a la columna oculta					
					var nCell;
					nCell = document.createElement( 'td' );						 
					nCell.className = "group";																									
					nCell.innerHTML = 0;															
					nGroup.appendChild( nCell ); 										
                  					
                    for(var j=0 ; j< cols ; j++)
					{
						nCell = document.createElement( 'td' );						 
						nCell.className = "group";														
						nCell.innerHTML = matriz_totales[row][j];																	
						nGroup.appendChild( nCell );						 
					}					
                    ++row;
                    nTrs[i].parentNode.insertBefore( nGroup, nTrs[i] );
					// Se crea atributo que asocie la fila de agregacion con sus filas hijas
					var att=document.createAttribute("data-tt-id");
					att.value=sGroup;
					// Se añade fila de agregacion para tabla principal
					nTrs[i].previousSibling.setAttributeNode(att);			
                    
					// /* Cell to insert into the frozen columns */
					
                    nGroup = document.createElement( 'tr' );
					nCell = document.createElement( 'td' );
					nCell.className = "group tag";
					nCell.innerHTML = sGroup.toUpperCase();
					nGroup.appendChild( nCell );
                    // Se añade fila de agregacion para tabla fija
					$(nGroup).insertBefore( $('tbody tr:eq('+(i+iCorrector)+')', left.body)[0] );
					
					iCorrector++;
					sLastGroup = sGroup;
				}
			}
			var nGroup = document.createElement('tr');
			// Se agrgega una columna correspondiente a la columna oculta			
			var nCell;
			nCell = document.createElement( 'td' );						 
			nCell.className = "group";																									
			nCell.innerHTML = 0;															
			nGroup.appendChild( nCell ); 				
			
			for(var j=0 ; j< cols ; ++j)
			{
				nCell = document.createElement( 'td' );						 
				nCell.className = "group";																				
				// alert(matriz_totales[row][j]);
				nCell.innerHTML = matriz_totales[row][j];																
				nGroup.appendChild( nCell );						 
			}		
			$(nGroup).insertBefore( $('tbody tr:eq('+(0)+')', right.body)[0] );						
			// Se crea atributo que asocie la fila de agregacion con sus filas hijas
			var att=document.createAttribute("data-tt-id");
			att.value="TOTALES";
			// Se añade fila de agregacion para tabla principal
			nTrs[0].previousSibling.setAttributeNode(att);				
			
			// /* Cell to insert into the frozen columns */
			
			nGroup = document.createElement( 'tr' );
			nCell = document.createElement( 'td' );
			nCell.className = "group tag";
			nCell.innerHTML = "TOTAL GENERAL";
			nGroup.appendChild( nCell );
			// Se añade fila de agregacion para tabla fija
			$(nGroup).insertBefore( $('tbody tr:eq(0)', left.body)[0] );			
		}
	});
}

function fixedColumn2()
{
		new FixedColumns( oTable, {	
		// "iLeftColumns": 3,
		"sHeightMatch": "none",		
		"fnDrawCallback": function ( left, right ) {
			/////////////////////////// Esta parte añade las filas de agregacion a la tabla //////////////////////////////////
			var that = this, groupVal = null, matches = 0, heights = [], index = -1;
			
			/* Get the heights of the cells and remove redundant ones */
			var cont=0;
			$('tbody tr td', left.body).each( function ( i ) {		
				
				var currVal = this.innerHTML;	
				
				/* Reset values on new cell data. */
				if (currVal != groupVal) {
					groupVal = currVal;
					index++;
					heights[index] = 0;
					matches = 0;
				} else  {
					matches++;
				}
				heights[ index ] += 21;
				// heights[ index ] += $(this.parentNode).height();
				if ( currVal == groupVal && matches > 0 ) {
					this.parentNode.parentNode.removeChild(this.parentNode);
				}
			} );

			/* Now set the height of the cells which remain, from the summed heights */
			$('tbody tr td', left.body).each( function ( i ) {
				that.fnSetRowHeight( this.parentNode, heights[ i ] );
			} );
		}
	});
	
	new FixedColumns( oTable, {
		"sHeightMatch": "none",	
		"iLeftColumns": 3,
	});
	
	calcular_incumplimiento();
}

function colorTotales(){
	switch(parseInt(variable))
	{
		case 1:
			var color_fondo = 'rgb(255, 235, 158)';
			$('.DTFC_Cloned tbody tr:first td').css('background-color',color_fondo);
			$('.table:not(.DTFC_Cloned) tbody tr:first td').css('background-color',color_fondo);
			$('.table:not(.DTFC_Cloned) tbody tr td:last-of-type:not(.group)').css('background-color',color_fondo);		
			break;
		case 2:						
			// $('.DTFC_Cloned tbody tr td:first-of-type:not(.group)').css({
				// 'background-color':'rgb(217, 214, 247)',
				// 'color': 'black',
				// 'border': '1px solid #B2B2B2'
			// });
			// $('.DTFC_Cloned tbody tr td:nth-last-of-type(2):not(.group)').css({
				// 'background-color':'rgb(232, 231, 245)',
				// 'color': 'black',				
			// });	
			$('.DTFC_Cloned tbody tr td:first-of-type:not(.group)').css({
				'background-color':'rgb(232, 231, 245)',
				'color': 'black',
				'border': '1px solid #B2B2B2'
			});
			
			// $('.DTFC_Cloned tbody tr td:nth-last-of-type(2):not(.group)').css({
				// 'background-color':'rgb(255, 235, 158)',
				// 'color': 'black',				
			// });				
			break;
	}		
}

function calcular_incumplimiento()
{
	var indice=parseInt($( "#slider-range-min" ).slider( "value" ));
	var total=0;
	var cont=0;
	$('#tabla_resumen tbody tr').each(function(){
		var politica=parseInt(parseInt($(this).children(':eq(2)').text()));							
		$(this).children().each(function(i){
			if(i>2)
			{
				var precio= parseInt($(this).text());					
				if(precio.toString()!='NaN')
				{
					if(Math.abs(precio-politica)>indice*politica/100)
					{
						$(this).addClass('fueraRango');
						cont++;
					}
					else
						$(this).removeClass();
					
					total++;
				}					
			}
		});			
	});		
	$('#pctje_incumplimiento').text((100*cont/total).toFixed(1)+'%');
}

$(document).ready(function () {		
			
	var callbacks = $.Callbacks();	
	callbacks.add( preInitTabla() );
	callbacks.add( construirTabla() );
	// callbacks.add( fixedColumn() );	
		
	$( "#slider-range-min" ).slider({
      range: "min",
      value: 25,
      min: 0,
      max: 100,
      slide: function( event, ui ) {
        $( "#amount" ).val( ui.value + '%');	
      },
	  change: function( event, ui ) {
		calcular_incumplimiento();
	  }
    });
    $( "#amount" ).val( $( "#slider-range-min" ).slider( "value" ) + '%');	

	$(window).bind('resize', function () {
		$('.DTFC_Cloned').find('.DataTables_sort_icon').append('<img class="loader" alt="" style="float:left;margin-left:20px" src="/bundles/cademreporte/images/loader-minitrans.gif">');	
		oTable.fnAdjustColumnSizing();
	});	
	
	/*
	$(window).bind('resize', function () {
		oTable.fnAdjustColumnSizing();
	});
	*/	
	$('#tabla_resumen_wrapper tr th').click(function() {
		var label= $(this).text().trim();
		$('.ui-state-active').removeClass();
		$(this).addClass('ui-state-active');
		$(".row_selected").removeClass("row_selected");
	});

	//BOTON PARA GENERAR EXCEL
	$('#excel').click(function() {
		alert('aaa');
	});
	
	//GUARDA QUE BOTON SE PRESIONA EN EL FORMULARIO
	var $boton_presionado;
	$('form#filtros input').click(function() {
		$boton_presionado = $(this);
	});
	
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	$('form#filtros').submit(function() {
		if($boton_presionado.attr("value") === "Limpiar Filtros"){
			$('form#filtros select[multiple="multiple"] option').prop('selected',true);
			$('#f_region_Region').change();
		}
		else procesarform(); //SE PROCESA FORMULARIO
		return false;
	});
	
	//REGION
	$(document).on('change', '#f_region_Region', function(){
		//RECARGAR PROVINCIA
		var datos = $(this).serialize();
		$('#f_provincia_Provincia').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_region') }}", datos, function(data) {
			$('#f_provincia').html(data);
		},'html')
		.done(function() {quitarloader(); $('#f_provincia_Provincia').change();})
		.fail(function() { alert("Se produjo un error al cargar las provincias");quitarloader();})
		.always(function() { /*alert("finished");*/});
	});
	
	//PROVINCIA
	$(document).on('change', '#f_provincia_Provincia', function(){
		//RECARGAR COMUNA
		var datos = $(this).serialize();
		$('#f_comuna_Comuna').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_provincia') }}", datos, function(data) {
			$('#f_comuna').html(data);
		},'html')
		.done(function() { /*alert("second success");*/ })
		.fail(function() { alert("Se produjo un error al cargar las comunas"); })
		.always(function() { /*alert("finished");*/ quitarloader();});
	});
	
});
	
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	function procesarform(){
		//SE CLONA FORM Y SE ARREGLA LOS ITEM SELECCIONADOS POR USUARIO
		var cform = $('form#filtros').clone();
		cform.find('option').removeAttr("selected");
		var originform = $('form#filtros option');
		originform.each(function(i) {
			if($(this).is(':selected')) cform.find('option').eq(i).attr("selected", true);
		});
		//SE QUITA REGION Y COMUNA
		cform.find('#f_region').remove();
		cform.find('#f_provincia').remove();
		cform.find('input').remove();
		
		var dataform = cform.serializeArray();
		
		DatosAdicionales = dataform;
		$('form#filtros input').last().after('<img id="tabla-loader" class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		recargarTabla();
		// oTable.fnDraw();//SI NO FUNCIONA ESTO USAR LA DE ABAJO
		// oTable.fnReloadAjax();
	}
	
	function recargarTabla()
	{		
		$.get("{{ url_header_action }}",DatosAdicionales,function(data){
			maxWidth=parseInt(data.max_width);			
			aoColumnDefs=JSON.parse(data.aoColumnDefs);			
			// Primero destruimos la tabla si existe (la removemos del DOM)	
			var ex = document.getElementById('tabla_resumen');
			if ( $.fn.DataTable.fnIsDataTable( ex ) ) {
			  oTable.fnDestroy(true);
			}				
			// Luego generamos el html de la tabla y lo añadimos al DOM
			var table= document.createElement( 'table' );
			var thead= document.createElement( 'thead' );
			table.setAttribute('id',"tabla_resumen");	
			table.setAttribute('class',"tabla_resumen table table-bordered display");								
			var tableHead = document.createElement( 'tr' );	 //tableheader 					
			var cols=data.head.length-1;
			$(data.head).each(function(key,value){				
				var tableHeading = document.createElement( 'th' );											
				
				if(key<columnas_reservadas || key==cols)
				{					
					tableHeading.innerHTML = value;
					tableHeading.setAttribute('rowspan',2);				
					tableHeading.setAttribute('style',"vertical-align:middle");	
				}
				else
				{					
					tableHeading.innerHTML = value['cod_sala'];										
				}												
				tableHead.appendChild( tableHeading );				
			});	
			thead.appendChild( tableHead );
			tableHead = document.createElement( 'tr' );	 //tableheader 				
			$(data.head).each(function(key,value){										
				if(key>=columnas_reservadas && key!=cols)
				{					
					var tableHeading = document.createElement( 'th' );						
					tableHeading.innerHTML = value['nom_sala'].substring(0,16).replace(/ /g,'_')+'...';
					tableHeading.setAttribute('title',value['nom_sala']);		
					tableHead.appendChild( tableHeading );									
				}																		
			});							
			thead.appendChild( tableHead );
			table.appendChild( thead );				
			document.getElementById('container').appendChild(table);
			if(data.head.length>30)
				alerta('Advertencia','Esta búsqueda retornó muchas salas, es posible que la carga y la respuesta tarden más de lo habitual. Se recomienda filtrar la búsqueda o utilizar "Chrome"');			
			// Luego recalculamos el ancho maximo en base a la cardinalidad del head
			preInitTabla();			
			// Luego volvemos a construir la tabla con dataTables
			construirTabla();
			$('.DTFC_LeftFootWrapper').hide();
		},"json")
		.done(function() {  })
		.fail(function() {  })
		.always(function() { quitarloader('#tabla-loader'); });
	}
		
	function quitarloader(id_){
		if(typeof id_ == 'undefined' || id_ == null){ if($('.loader').length > 0) $('.loader').remove();}
		else{
			$(id_+'.loader').remove();
		}
	}	
	
	function alerta(strong,text){
		var alerttipo = '<br><div class="alert alert-info">' +
		  '<button id="alerta" type="button" class="close" data-dismiss="alert" style="margin:1em">×</button>'+
		  '<strong>'+strong+'</strong> '+text+
		'</div>';
		$('#container').parent().append(alerttipo);
	}	
	
 </script>
{% endblock %}