{% extends '::admin.html.twig' %}

{% block body %}
		  <div class="hero-unit">
        <h2>Carga de Item</h2>
        <p>A continuación podrá cargar un archivo CSV, que contenga los “ITEMs” que desea cargar. Se verificará si el SKU existe, de ser así se descartaran.</p>
        <p>El formato del CSV debe ser: TIPOCODIGO;FABRICANTE;MARCA;NOMBRE;CODIGO. Ya que hay varios formatos de CSV, se recomienda ocupar Excel 2010 y guardar como Delimitado por comas (CSV). Se debe tener en cuenta que el CODIGO no debe ser guardado como número.</p>
        <p>Para iniciar rápidamente se deja un <a href="{{ asset('bundles/cademreporte/item_ejemplo_v1.csv') }}">CSV de ejemplo</a>.</p>
        <br>


        <form id="f1" action="{{ path('admin_fileupload') }}" method="POST" enctype="multipart/form-data" encoding="multipart/form-data">
          <div id="fileupload1" class="fileupload fileupload-new" data-provides="fileupload">
            <div class="input-append">
              <div class="uneditable-input span3"><i class="icon-file fileupload-exists"></i> <span class="fileupload-preview"></span></div><span class="btn btn-file"><span class="fileupload-new">Seleccionar</span><span class="fileupload-exists">Cambiar</span><input type="file" name="file1" id="file1"/></span><a href="#" class="btn btn-danger fileupload-exists" data-dismiss="fileupload">Remover</a><input class="btn btn-success fileupload-exists" type="submit" value="Subir">
            </div>
          </div>
          
        </form>
        




      </div>
          
{% endblock %}


{% block javascripts %}
<script src="http://malsup.github.com/jquery.form.js"></script>
<script>
$(document).ready(function () {

var BrowserDetect = {
  init: function () {
    this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
    this.version = this.searchVersion(navigator.userAgent)
      || this.searchVersion(navigator.appVersion)
      || "an unknown version";
    this.OS = this.searchString(this.dataOS) || "an unknown OS";
  },
  searchString: function (data) {
    for (var i=0;i<data.length;i++) {
      var dataString = data[i].string;
      var dataProp = data[i].prop;
      this.versionSearchString = data[i].versionSearch || data[i].identity;
      if (dataString) {
        if (dataString.indexOf(data[i].subString) != -1)
          return data[i].identity;
      }
      else if (dataProp)
        return data[i].identity;
    }
  },
  searchVersion: function (dataString) {
    var index = dataString.indexOf(this.versionSearchString);
    if (index == -1) return;
    return parseFloat(dataString.substring(index+this.versionSearchString.length+1));
  },
  dataBrowser: [
    {
      string: navigator.userAgent,
      subString: "Chrome",
      identity: "Chrome"
    },
    {   string: navigator.userAgent,
      subString: "OmniWeb",
      versionSearch: "OmniWeb/",
      identity: "OmniWeb"
    },
    {
      string: navigator.vendor,
      subString: "Apple",
      identity: "Safari",
      versionSearch: "Version"
    },
    {
      prop: window.opera,
      identity: "Opera",
      versionSearch: "Version"
    },
    {
      string: navigator.vendor,
      subString: "iCab",
      identity: "iCab"
    },
    {
      string: navigator.vendor,
      subString: "KDE",
      identity: "Konqueror"
    },
    {
      string: navigator.userAgent,
      subString: "Firefox",
      identity: "Firefox"
    },
    {
      string: navigator.vendor,
      subString: "Camino",
      identity: "Camino"
    },
    {   // for newer Netscapes (6+)
      string: navigator.userAgent,
      subString: "Netscape",
      identity: "Netscape"
    },
    {
      string: navigator.userAgent,
      subString: "MSIE",
      identity: "Explorer",
      versionSearch: "MSIE"
    },
    {
      string: navigator.userAgent,
      subString: "Gecko",
      identity: "Mozilla",
      versionSearch: "rv"
    },
    {     // for older Netscapes (4-)
      string: navigator.userAgent,
      subString: "Mozilla",
      identity: "Netscape",
      versionSearch: "Mozilla"
    }
  ],
  dataOS : [
    {
      string: navigator.platform,
      subString: "Win",
      identity: "Windows"
    },
    {
      string: navigator.platform,
      subString: "Mac",
      identity: "Mac"
    },
    {
         string: navigator.userAgent,
         subString: "iPhone",
         identity: "iPhone/iPod"
      },
    {
      string: navigator.platform,
      subString: "Linux",
      identity: "Linux"
    }
  ]

};
BrowserDetect.init();
  
  if(BrowserDetect.browser != 'Chrome' && BrowserDetect.browser != 'Safari' && BrowserDetect.browser != 'Firefox'){
    alert('NO SE DETECTA UN NAVEGADOR COMPATIBLE. PUEDE QUE ESTA APLICACION NO FUNCIONE CORRECTAMENTE. PREFERENTEMENTE USE CHROME');
  }


  $('#f1').ajaxForm({
    success: function(data) {
        // console.log(data);
        if(data.status == false){
          alert('SE PRODUJO UN ERROR AL SUBIR EL ARCHIVO');
          return;
        }
        //AHORA SE DEBE VALIDAR EL ARCHIVO SUBIDO
        $.get("{{ path('admin_filevalid') }}", {name: data.name, tipo_carga: data.tipo_carga}, function(data2) {
          if(typeof data2.status == 'undefined' || data2.status == false){
            alert('SE PRODUJO UN ERROR EN LA VALIDACION DEL ARCHIVO: ' + data2.mensaje);
            return;
          }
          $.get("{{ path('admin_fileprocess') }}", {name: data2.name, tipo_carga: data2.tipo_carga}, function(data3) {
            if(data3.status == false){
              alert('SE PRODUJO UN ERROR EN LA CARGA DEL ARCHIVO: ' + data3.mensaje);
              return;
            }
            else alert('PROCESO DE CARGA EXITOSO. REGISTROS GUARDADOS: ' + data3.row_affected);
          } );
          alert('VALIDADO EXITOSO ('+data2.time_taken+ MS'). COMENZO CARGA A LA BD.');
        })
        .fail(function() { alert("ERROR AL VALIDAR"); });
    },
    error: function() {
        alert('SE PRODUJO UN ERROR AL SUBIR EL ARCHIVO');
    },
    dataType:'json',
    data: {tipo_carga: 'item'}
  });

  $('#file1').change(function(){
    if($(this).val() != ''){
      var filename = $(this).val().split('\\').pop();
      var ext = /(?:\.([^.]+))?$/.exec(filename)[1];
      if(ext != "csv" && ext != "CSV"){
        alert('POR FAVOR, VERIFIQUE QUE EL ARCHIVO '+filename+' ES UN CSV');
        $('#fileupload1').fileupload('clear');
      }
    }
    
  });

});
 </script>
{% endblock %}