{% extends '::base.html.twig' %}


{% if tag_variable|lower == "quiebre" %}	
    {% set url_evolutivo = path('quiebre_resumen_evolutivo') %}    
{% else %}	
    {% set url_evolutivo = path('presencia_resumen_evolutivo') %}    
{% endif %}
{% set url_body_action = path(body_action) %}
{% set url_header_action = path(header_action) %}

{% block title %}Cadem Analytics{% endblock %}

{% block filtro %}
	<form id="filtros" action="" method="post" >
		{% for form in forms %}
				{{ form_widget(form) }}
		{% endfor %}
	<input class="btn btn-primary" type="submit" value="Filtrar" />
	<input class="btn btn-warning" type="submit" value="Limpiar Filtros" />
{% endblock %}

{% block body %}
    <div class="span9">
		<div class="container-fluid well" style="padding-top:0">
			<h4>Resumen de {{estudios[0].getEstudioVariables[0].getNombrevariable}}</h4>
				<div class="hero-unit" style="padding:15px;margin-bottom:10px">
					<div id='container' class="row-fluid">
							<table id="tabla_resumen" class="table table-bordered display" cellpadding="0" cellspacing="0" border="0" width='100%'>                      
								<thead>
									<tr>
										{% for item in head %}
										<th title="{{item|upper}}" tag="{{item|upper}}">
											{% if item|length>8 and loop.index>1 %}
												{{item[0:8]|upper}}...
											{% else %}
												{{item|upper}}
											{% endif %}
										</th>
										{% endfor %}
									</tr>
								</thead>
								<tbody>									
								</tbody>                        					                   
							</table>			
					</div><!--/row-->   
				</div>
					<div class="hero-unit" style="padding:30px">
							<div class="row-fluid">
							{# {% for item in variables_clientes %} #}
								<div id="i_quiebre" ></div>
							{# {% endfor %} #}			
							</div>
					</div>             
				</div><!--/span-->
			</div>
		</div>
{% endblock %}

{% block customstyles %}

div.dataTables_scroll { 
	clear: both !important; 
}

td{
	font-size: .55em !important;
	text-align: center !important;
	font-family: "Arial",Georgia,Serif !important;	
	padding: 0em !important;
}

th{
	font-size: .55em !important;
	text-align: center !important;
}

.tag{
	text-align: left !important;
}

span.indenter{
	padding-left:0em !important;
}

.hero-unit select{
	width: auto;
	padding: 0;
	margin-bottom: 0;
}

.hero-unit input{
	width: auto;
	padding: 0;
	margin-bottom: 0;
}

.hero-unit label{
	margin-bottom: 0;
}

.total {
	background-color:'#F7FE2E' !important;
}

legend {
	font-size: 12px !important;
	font-weight: bold !important;
	margin-bottom: 10px !important;
	color: '#999' !important;
}

.dataTables_filter{
	margin-bottom: 10px !important;
	font-size: 14px !important;
	height: 16px !important;
	padding: .1em !important;
}

.dataTables_filter label{
	margin-bottom: 0em !important;	
}

{% endblock %}

{% block stylesheets %}
<link href="{{ asset('bundles/cademreporte/css/demo_table.css') }}" rel="stylesheet">			
<link href="{{ asset('bundles/cademreporte/css/jquery.dataTables_themeroller.css') }}" rel="stylesheet">
{% endblock %}

{% block javascripts %}
<script src="{{ asset('bundles/cademreporte/js/jquery.dataTables.min.js') }}"></script>
<script src="{{ asset('bundles/cademreporte/js/dataTables.fixedColumns.js') }}"></script>
<script src="{{ asset('bundles/cademreporte/js/jquery.heatcolor.0.0.1.js') }}"></script>
<script>

var i_quiebre;
var periodo = {{ periodos|raw }};
var oTable;
var oFc;
var maxWidth;
var maxWidth={{max_width}};
var DatosAdicionales = [];
var matriz_totales = [];
var aoColumnDefs = {{aoColumnDefs|raw}};

function calcularAnchoMaximo()
{
	// Calcula el ancho máximo de la tabla	
	var anchoPantalla= screen.width;	
	// Corregir el maxwidth en base a la resolucion de la pantalla

	switch(anchoPantalla)
	{
		case 1366:						
			break;
		case 1360:
			maxWidth=maxWidth*1.1;
			break;
		case 1280:
			maxWidth=maxWidth*1.15;
			break;
		case 1024:
			maxWidth=maxWidth*1.3;
			break;
		case 800:
			maxWidth=maxWidth*1.25;
			break;
	}
	// Calcula el ancho máximo de la tabla	
	$('table').css('max-width',maxWidth+'%');
	// alert('maxWidth='+maxWidth);
}

function construirTabla()
{
	$('#tabla_resumen').ready(function(){		
		oTable = $('#tabla_resumen').dataTable({
			"bProcessing": true,
			"bServerSide": true,
			"sAjaxSource": "{{ url_body_action }}",
			"fnServerData": function ( sSource, aoData, fnCallback ) {				
				//AGREGAMOS LOS DATOS SOLO SI HAY
				if (DatosAdicionales.length > 0) for(i in DatosAdicionales) aoData.push(DatosAdicionales[i]);
				$.ajax( {
					"dataType": 'json', 
					"type": "GET", 
					"url": sSource, 
					"data": aoData, 
					"success": function(data){//QUE PASA SI FALLA?														
								matriz_totales=data.matriz_totales;																
								fnCallback(data);
								DatosAdicionales = [];//AL FINAL SE BORRAN
							}
				} )
				.done(function() { colorTotales(); })
				.fail(function() {  })
				.always(function() { quitarloader(); });
			},
			// "oLanguage": {
						// "sProcessing": "<img src='{{ asset('bundles/cademreporte/images/loader.gif') }}'>"
			// },			
			"sScrollY": "230px",
			"sScrollX": "100%",
			"sScrollXInner": maxWidth+'%',
			"bScrollCollapse": true,
			"bFilter": false,
			"bSort": false,
			"bInfo": false,
			"bPaginate": false,
			"bJQueryUI": true,
			// "bAutoWidth": true, 
			"aoColumnDefs": aoColumnDefs,
			// "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {			
				// $(nRow).attr("data-tt-parent-id",aData[1]);
			// },		
			"aaSortingFixed": [[ 1, 'asc' ]],
			"fnInitComplete": function() {										
					fixedColumn();
				},	
			"oLanguage": {
			  "sProcessing": "<b>Procesando...</b>"
			},
			"fnDrawCallback": function() {
					quitarloader();
			}			
		//	"sDom": '<"H"Cfr>t<"F"ip>',					
		});
		
		$('div.fg-toolbar:first').append("<h5 style='float:left;margin:0em'>Tabla Resumen {{estudios[0].getEstudioVariables[0].getNombrevariable}}: (%)</h5>");
		$("<div class='dataTables_filter input-append' align='right' style='float:right;width:60%'><button id='colorear' class='btn btn_filtro' type='button'>Colorear Celdas</button></div>").appendTo('#tabla_resumen_wrapper .fg-toolbar:first');				 				
		$('#colorear').mousedown(function(){
			if($(this).hasClass('btn-warning'))
			{
				$(this).removeClass('btn-warning');
				colorearCeldas(false);
			}
			else
			{
				$(this).addClass('btn-warning');
				colorearCeldas(true);
			}
		});		
	});
}

function fixedColumn()
{			
		new FixedColumns( oTable, {
		"fnDrawCallback": function ( left, right ) {			
			/////////////////////////// Esta parte añade las filas de agregacion a la tabla //////////////////////////////////
			var oSettings = oTable.fnSettings();
			if ( oSettings.aiDisplay.length === 0 )
			{
				return;
			}
			var nGroup, nCell, iIndex, sGroup;
			var sLastGroup = "", iCorrector=0;
			var nTrs = $('#tabla_resumen tbody tr');
			// var iColspan = nTrs[0].getElementsByTagName('td').length;
            var cols=oTable.fnSettings().aoColumns.length-2;
			var row=0;
			
			for ( var i=0 ; i<nTrs.length ; ++i )
			{
				iIndex = oSettings._iDisplayStart + i;

				sGroup = oSettings.aoData[ oSettings.aiDisplay[iIndex] ]._aData[1];
				
				if ( sGroup != sLastGroup )
				{
              		var nGroup = document.createElement('tr');
					// Se agrgega una columna correspondiente a la columna oculta					
					var nCell;
					nCell = document.createElement( 'td' );						 
					nCell.className = "group";																									
					nCell.innerHTML = sGroup;															
					nGroup.appendChild( nCell ); 					
					
                    for(var j=0 ; j< cols ; ++j)
					{
						nCell = document.createElement( 'td' );						 
						nCell.className = "group";																				
						// alert(matriz_totales[row][j]);
						nCell.innerHTML = matriz_totales[row][j];																
						nGroup.appendChild( nCell );						 
					}
					++row;
                    nTrs[i].parentNode.insertBefore( nGroup, nTrs[i] );
					// Se crea atributo que asocie la fila de agregacion con sus filas hijas
					var att=document.createAttribute("data-tt-id");
					att.value=sGroup;
					// Se añade fila de agregacion para tabla principal
					nTrs[i].previousSibling.setAttributeNode(att);				
                    
					// /* Cell to insert into the frozen columns */
					
                    nGroup = document.createElement( 'tr' );
					nCell = document.createElement( 'td' );
					nCell.className = "group tag";
					nCell.innerHTML = sGroup;
					nGroup.appendChild( nCell );
                    // Se añade fila de agregacion para tabla fija
					$(nGroup).insertBefore( $('tbody tr:eq('+(i+iCorrector)+')', left.body)[0] );
					
					iCorrector++;
					sLastGroup = sGroup;
				}
			}
			nGroup = document.createElement('tr');
			// Se agrgega una columna correspondiente a la columna oculta			
			var nCell;
			nCell = document.createElement( 'td' );						 
			nCell.className = "group";																									
			nCell.innerHTML = 0;															
			nGroup.appendChild( nCell ); 											
			
			for(var j=0 ; j< cols ; ++j)
			{
				nCell = document.createElement( 'td' );						 
				nCell.className = "group";																				
				// alert(matriz_totales[row][j]);
				nCell.innerHTML = matriz_totales[row][j];																
				nGroup.appendChild( nCell );						 
			}						
			
			$(nGroup).insertBefore( $('tbody tr:eq('+(0)+')', right.body)[0] );
			// Se crea atributo que asocie la fila de agregacion con sus filas hijas
			var att=document.createAttribute("data-tt-id");
			att.value="TOTALES";
			// Se añade fila de agregacion para tabla principal
			nTrs[0].previousSibling.setAttributeNode(att);				
			
			// /* Cell to insert into the frozen columns */
			
			nGroup = document.createElement( 'tr' );
			nCell = document.createElement( 'td' );
			nCell.className = "group tag";
			nCell.innerHTML = "TOTAL GENERAL";
			nGroup.appendChild( nCell );
			// Se añade fila de agregacion para tabla fija			
			$(nGroup).insertBefore( $('tbody tr:eq('+(0)+')', left.body)[0] );	
			matriz_totales=[];
		}
	});	
}

function colorearCeldas(flag){
	
	if(flag)
	{
		$("#tabla_resumen tbody tr td").heatcolor(
			function() {			
				return parseFloat($(this).text());
				},
				{ maxval: 0,
				minval: 100,
				colorStyle: 'greentored',
				lightness: 0,
				reverseOrder: {% if tag_variable in ['presencia']%} true {% else %}	false {% endif %}
				}		
		);
	}
	else
	{
		$("#tabla_resumen tbody tr td").removeAttr('style');
		colorTotales();
	}
	
}

function colorTotales(){
	var color_fondo = 'rgb(255, 235, 158)';
	$('.DTFC_Cloned tbody tr:first td').css('background-color',color_fondo);
	$('.table:not(.DTFC_Cloned) tbody tr:first td').css('background-color',color_fondo);
	$('.table:not(.DTFC_Cloned) tbody tr td:last-of-type:not(.group)').css('background-color',color_fondo);
	$('.DTFC_Cloned tbody tr td:first-of-type:not(.group)').css({
		'background-color':'rgb(238, 236, 255)',
		'color': 'black',
	});	
}

$(document).ready(function () {
	
	var callbacks = $.Callbacks();

	callbacks.add( calcularAnchoMaximo() );
	callbacks.add( construirTabla() );
	
	$(window).bind('resize', function () {
		$('.DTFC_Cloned').find('.DataTables_sort_icon').append('<img class="loader" alt="" style="float:left;margin-left:20px" src="/bundles/cademreporte/images/loader-minitrans.gif">');	
		oTable.fnAdjustColumnSizing();
	});		

		i_quiebre = new Highcharts.Chart({
		chart: {    
			renderTo: 'i_quiebre',
                        type: 'spline',
                        //marginRight: 130,
                        //marginBottom: 25,                                
			plotBackgroundColor: null,
			plotBorderWidth: null,
			plotShadow: false,
			width: 900,
			height: 350
		},
		title: {
			text: 'Evolución {{estudios[0].getEstudioVariables[0].getNombrevariable}}'
		},
		tooltip: {
			pointFormat: ' <span style="color:{series.color}">{series.name}</span>: <b>{point.y}%</b><br/>',
			percentageDecimals: 1,
			enabled: true
		},
		xAxis: {
            categories: periodo.data,
			
			labels: {
                rotation: 0
            }			
		},		
		yAxis: {
	        // max: 100,
			// min: 0,
            //categories: [0,100],
			title: {
                    text: 'Promedio {{tag_variable}} (%)'
            }
		},		
		series: [{
                    name: '% {{tag_variable}}',
                    data: {{ evolutivo }}
                }],
		legend: {
               layout: 'vertical',
               align: 'center',
               x: 350,
               verticalAlign: 'top',
               y: 0,
               floating: true
            },				
		credits: {
			enabled: false
		}
	});	
	cargartooltip();
			
	//GUARDA QUE BOTON SE PRESIONA EN EL FORMULARIO
	var $boton_presionado;
	$('form#filtros input').click(function() {
		$boton_presionado = $(this);
	});
	
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	$('form#filtros').submit(function() {
		if($boton_presionado.attr("value") === "Limpiar Filtros"){
			$('form#filtros select[multiple="multiple"] option').prop('selected',true);
			$('#f_region_Region').change();
		}
		else procesarform(); //SE PROCESA FORMULARIO
		return false;
	});
	
	//REGION
	$(document).on('change', '#f_region_Region', function(){
		//RECARGAR PROVINCIA
		var datos = $(this).serialize();
		$('#f_provincia_Provincia').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_region') }}", datos, function(data) {
			$('#f_provincia').html(data);
		},'html')
		.done(function() {quitarloader(); $('#f_provincia_Provincia').change();})
		.fail(function() { alert("Se produjo un error al cargar las provincias");quitarloader();})
		.always(function() { /*alert("finished");*/});
	});
	
	//PROVINCIA
	$(document).on('change', '#f_provincia_Provincia', function(){
		//RECARGAR COMUNA
		var datos = $(this).serialize();
		$('#f_comuna_Comuna').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_provincia') }}", datos, function(data) {
			$('#f_comuna').html(data);
		},'html')
		.done(function() { /*alert("second success");*/ })
		.fail(function() { alert("Se produjo un error al cargar las comunas"); })
		.always(function() { /*alert("finished");*/ quitarloader();});
	});
	
	
	//VARIABLES COMPARTIDAS
	var intento_col = false;
	var intento_fil = false;
	var label_col = "";
	var label_fil = "";
	var cat_fil = "";
	//GRAFICAR COLUMNAS
	$(document).on('click', 'thead th', function(e) {
		var label= $(this).attr('tag');
		if (e.ctrlKey){//AGREGAR OTRA LINEA
			$(this).addClass("ui-state-active");
			intento_col = false;
			//GET
			//SE CLONA FORM Y SE ARREGLA LOS ITEM SELECCIONADOS POR USUARIO
			var cform = $('form#filtros').clone();
			cform.find('option').removeAttr("selected");
			var originform = $('form#filtros option');
			originform.each(function(i) {
				if($(this).is(':selected')) cform.find('option').eq(i).attr("selected", true);
			});
			//SE QUITA REGION Y COMUNA
			cform.find('#f_region').remove();
			cform.find('#f_provincia').remove();
			cform.find('input').remove();
			
			var dataform = cform.serialize();
			
			if(intento_fil){//SE AGREGA LINEA CRUZADA
				//SE REMUEVEN TODOS y SE AGREGA
				if (i_quiebre.series.length > 1){
					var len = i_quiebre.series.length;
					for(var i=1;i<len;i++) i_quiebre.series[1].remove();
				}
				
				dataform = dataform + '&cadena=' + label + '&nivel=' + label_fil + '&cat=' + cat_fil;
				label = label + '/' + label_fil;
			}
			else{
				dataform = dataform + '&cadena=' + label;
			}
			
			$(this).find('.DataTables_sort_icon').append('<img class="loader" alt="" style="float:left;margin-left:20px" src="/bundles/cademreporte/images/loader-minitrans.gif">');
			$.get("{{ url_evolutivo }}",dataform,function(data){
				if(data.evo_ejey != -1){//HAY DATOS
					i_quiebre.addSeries({
						name: label,
						data: data.evo_ejey
					});
				}
				else alerta('¡Atención!','El ítem seleccionado no tiene datos para los filtros ocupados.');//NO HAY DATOS
			},"json")
			.done(function() { /*alert("second success");*/ })
			.fail(function() { alert("Se produjo un error al cargar"); })
			.always(function() { /*alert("finished");*/ quitarloader();});
			
		}
		else{//REEMPLAZAR TODO MENOS LINEA GENERAL
			intento_col = true;
			intento_fil = false;
			label_col = label;
			$(".ui-state-active").removeClass("ui-state-active");
			$(this).addClass("ui-state-active");
			//GET
			//SE CLONA FORM Y SE ARREGLA LOS ITEM SELECCIONADOS POR USUARIO
			var cform = $('form#filtros').clone();
			cform.find('option').removeAttr("selected");
			var originform = $('form#filtros option');
			originform.each(function(i) {
				if($(this).is(':selected')) cform.find('option').eq(i).attr("selected", true);
			});
			//SE QUITA REGION Y COMUNA
			cform.find('#f_region').remove();
			cform.find('#f_provincia').remove();
			cform.find('input').remove();
			
			var dataform = cform.serialize();
			dataform = dataform + '&cadena=' + label;
			
			$(this).find('.DataTables_sort_icon').append('<img class="loader" alt="" style="float:left;margin-left:20px" src="/bundles/cademreporte/images/loader-minitrans.gif">');
			$.get("{{ url_evolutivo }}",dataform,function(data){
				if(data.evo_ejey != -1){//HAY DATOS
					//SE REMUEVEN TODOS y SE AGREGA
					if (i_quiebre.series.length > 1){
						var len = i_quiebre.series.length;
						for(var i=1;i<len;i++) i_quiebre.series[1].remove();
					}
					i_quiebre.addSeries({
						name: label,
						data: data.evo_ejey
					});
				}
				else alerta('¡Atención!','El ítem seleccionado no tiene datos para los filtros ocupados.');//NO HAY DATOS
				
			},"json")
			.done(function() { /*alert("second success");*/ })
			.fail(function() { alert("Se produjo un error al cargar"); })
			.always(function() { /*alert("finished");*/ quitarloader();});
		}
	});

	
	//GRAFICAR FILAS
	$(document).on('click', 'td.tag', function(e) {
		var categoria = false;
		if($(this).hasClass('group')) categoria = true;
		var label= $(this).text();
		if (e.ctrlKey){//AGREGAR OTRA LINEA
			intento_fil = false;
			$(this).addClass("ui-state-active");
			//GET
			//SE CLONA FORM Y SE ARREGLA LOS ITEM SELECCIONADOS POR USUARIO
			var cform = $('form#filtros').clone();
			cform.find('option').removeAttr("selected");
			var originform = $('form#filtros option');
			originform.each(function(i) {
				if($(this).is(':selected')) cform.find('option').eq(i).attr("selected", true);
			});
			//SE QUITA REGION Y COMUNA
			cform.find('#f_region').remove();
			cform.find('#f_provincia').remove();
			cform.find('input').remove();
			
			var dataform = cform.serialize();
			
			if(intento_col){//SE AGREGA LINEA CRUZADA
				//SE REMUEVEN TODOS y SE AGREGA
				if (i_quiebre.series.length > 1){
					var len = i_quiebre.series.length;
					for(var i=1;i<len;i++) i_quiebre.series[1].remove();
				}
				
				dataform = dataform + '&cadena=' + label_col + '&nivel=' + label + '&cat=' + categoria;
				label = label_col + '/' + label;
			}
			else{
				dataform = dataform + '&nivel=' + label + '&cat=' + categoria;
			}
			
			
			$('.DTFC_Cloned').find('.DataTables_sort_icon').append('<img class="loader" alt="" style="float:left;margin-left:20px" src="/bundles/cademreporte/images/loader-minitrans.gif">');
			$.get("{{ url_evolutivo  }}",dataform,function(data){
				if(data.evo_ejey != -1){//HAY DATOS
					i_quiebre.addSeries({
						name: label,
						data: data.evo_ejey
					});
				}
				else alerta('¡Atención!','El ítem seleccionado no tiene datos para los filtros ocupados.');//NO HAY DATOS
				
			},"json")
			.done(function() { /*alert("second success");*/ })
			.fail(function() { alert("Se produjo un error al cargar"); })
			.always(function() { /*alert("finished");*/ quitarloader();});
			
		}else{//REEMPLAZAR TODO MENOS LINEA GENERAL
			intento_fil = true;
			intento_col = false;
			label_fil = label;
			cat_fil = categoria;
			$(".ui-state-active").removeClass("ui-state-active");
			$(this).addClass("ui-state-active");
			//GET
			//SE CLONA FORM Y SE ARREGLA LOS ITEM SELECCIONADOS POR USUARIO
			var cform = $('form#filtros').clone();
			cform.find('option').removeAttr("selected");
			var originform = $('form#filtros option');
			originform.each(function(i) {
				if($(this).is(':selected')) cform.find('option').eq(i).attr("selected", true);
			});
			//SE QUITA REGION Y COMUNA
			cform.find('#f_region').remove();
			cform.find('#f_provincia').remove();
			cform.find('input').remove();
			
			var dataform = cform.serialize();
			dataform = dataform + '&nivel=' + label + '&cat=' + categoria;
			
			$('.DTFC_Cloned').find('.DataTables_sort_icon').append('<img class="loader" alt="" style="float:left;margin-left:20px" src="/bundles/cademreporte/images/loader-minitrans.gif">');
			$.get("{{ url_evolutivo }}",dataform,function(data){
				if(data.evo_ejey != -1){//HAY DATOS
					//SE REMUEVEN TODOS y SE AGREGA
					if (i_quiebre.series.length > 1){
						var len = i_quiebre.series.length;
						for(var i=1;i<len;i++) i_quiebre.series[1].remove();
					}
					i_quiebre.addSeries({
						name: label,
						data: data.evo_ejey
					});
				}
				else alerta('¡Atención!','El ítem seleccionado no tiene datos para los filtros ocupados.');//NO HAY DATOS
			},"json")
			.done(function() { /*alert("second success");*/ })
			.fail(function() { alert("Se produjo un error al cargar"); })
			.always(function() { /*alert("finished");*/ quitarloader();});
		}
	});
				
});
		
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	function procesarform(){
		//SE CLONA FORM Y SE ARREGLA LOS ITEM SELECCIONADOS POR USUARIO
		var cform = $('form#filtros').clone();
		cform.find('option').removeAttr("selected");
		var originform = $('form#filtros option');
		originform.each(function(i) {
			if($(this).is(':selected')) cform.find('option').eq(i).attr("selected", true);
		});
		//SE QUITA REGION Y COMUNA
		cform.find('#f_region').remove();
		cform.find('#f_provincia').remove();
		cform.find('input').remove();
		
		var dataform = cform.serializeArray();
		
		DatosAdicionales = dataform;
		$('form#filtros input').last().after('<img id="tabla-loader" class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		recargarTabla();
		// oTable.fnDraw();//SI NO FUNCIONA ESTO USAR LA DE ABAJO		
		// oTable.fnReloadAjax();
		
		//CARGAR EVOLUTIVO
		$('form#filtros input').last().after('<img id="evolutivo" class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get("{{ url_evolutivo }}",dataform,function(data_){
			//SE REMUEVEN TODOS y SE AGREGA
			if (i_quiebre.series.length > 0){
				var len = i_quiebre.series.length;
				for(var i=0;i<len;i++) i_quiebre.series[0].remove();
			}
			i_quiebre.addSeries({
				name: '% Quiebre',
				data: data_.evo_ejey
			});
		},'json')
		.done(function() {  })
		.fail(function() {  })
		.always(function() { quitarloader('#evolutivo'); });
	}
	
	function recargarTabla()
	{		
		$.get("{{ url_header }}",DatosAdicionales,function(data){
		
			maxWidth=parseInt(data.max_width);
			// Primero destruimos la tabla si existe (la removemos del DOM)	
			var ex = document.getElementById('tabla_resumen');
			if ( $.fn.DataTable.fnIsDataTable( ex ) ) {
			  oTable.fnDestroy(true);
			}			
			// Luego generamos el html de la tabla y lo añadimos al DOM
			var table= document.createElement( 'table' );
			var thead= document.createElement( 'thead' );
			var att=document.createAttribute("id");
			att.value="tabla_resumen";					
			table.setAttributeNode(att);
			var att=document.createAttribute("class");
			att.value="tabla_resumen table table-bordered display";					
			table.setAttributeNode(att);			
			var tableHead = document.createElement( 'tr' );	 //tableheader 							
			$(data.head).each(function(key,value){				
				var tableHeading = document.createElement( 'th' );					
				att=document.createAttribute("tag");
				att.value=value;
				tableHeading.setAttributeNode(att);
				tableHeading.innerHTML = value;														
				tableHead.appendChild( tableHeading );				
			});						
			table.appendChild( tableHead );	
			thead.appendChild( tableHead );
			table.appendChild( thead );						
			document.getElementById('container').appendChild(table);			
			// Luego recalculamos el ancho maximo en base a la cardinalidad del head
			calcularAnchoMaximo();			
			// Luego volvemos a construir la tabla con dataTables
			construirTabla();
		},"json")
		.done(function() {  })
		.fail(function() {  })
		.always(function() { quitarloader('#tabla-loader'); });
	}
	
	function quitarloader(id_){
		if(typeof id_ == 'undefined' || id_ == null){ if($('.loader').length > 0) $('.loader').remove();}
		else{
			$(id_+'.loader').remove();
		}
	}
				
	function cargartooltip(){
		$.each(periodo.data, function(index, value) {
			$('div#i_quiebre tspan:contains("'+value+'")').attr('title', periodo.tooltip[index])
			.tooltip({
				track: true
			});
		});	
	}		
	
	function alerta(strong,text){
		var alerttipo = '<div class="alert alert-info">' +
		  '<button type="button" class="close" data-dismiss="alert">×</button>'+
		  '<strong>'+strong+'</strong> '+text+
		'</div>';
		$('#container').prepend(alerttipo);
	}
	
 </script>
{% endblock %}