{% extends '::base.html.twig' %}

{% block title %}Cadem Reporte{% endblock %}

{% block filtro %}
	<form id="filtros" action="" method="post" >
		{% for form in forms %}
				{{ form_widget(form) }}
		{% endfor %}
	<input class="btn btn-primary" type="submit" value="Filtrar" />
	<input class="btn btn-warning" type="submit" value="Limpiar Filtros" />
{% endblock %}

{% block body %}
    <div class="span9">
		<div class="container-fluid well" style="padding-top:0">
			<h4>Vista Resumen de Quiebre</h4>
				<div class="hero-unit" style="padding:15px;margin-bottom:10px">
					<div id='container' class="row-fluid">
							<table id="tabla_resumen" class="table table-bordered display" cellpadding="0" cellspacing="0" border="0">                      
								<thead>
									<tr>
										{% for item in head %}
										<th title="{{item|upper}}" tag="{{item|upper}}">
											{% if item|replace({' ':'_'})|length>8 and loop.index>1 %}
												{{item|replace({' ':'_'})[0:8]|upper}}...
											{% else %}
												{{item|upper}}
											{% endif %}
										</th>
										{% endfor %}
									</tr>
								</thead>
								<tbody>									
								</tbody>                        					                   
							</table>			
					</div><!--/row-->   
				</div>
					<div class="hero-unit" style="padding:30px">
							<div class="row-fluid">
							{# {% for item in variables_clientes %} #}
								<div id="i_quiebre" ></div>
							{# {% endfor %} #}			
							</div>
					</div>             
				</div><!--/span-->
			</div>
		</div>
{% endblock %}

{% block customstyles %}

div.dataTables_scroll { 
	clear: both !important; 
}

td{
	font-size: .64em !important;
	text-align: center !important;
}

th{
	font-size: .64em !important;
	text-align: center !important;
}

.tag{
	text-align: left !important;
}

span.indenter{
	padding-left:0em !important;
}

.hero-unit select{
	width: auto;
	padding: 0;
	margin-bottom: 0;
}

.hero-unit input{
	width: auto;
	padding: 0;
	margin-bottom: 0;
}

.hero-unit label{
	margin-bottom: 0;
}

.total {
	background-color:'#F7FE2E' !important;
}

legend {
	font-size: 12px !important;
	font-weight: bold !important;
	margin-bottom: 10px !important;
	color: '#999' !important;
}
{% endblock %}

{% block stylesheets %}
<link href="{{ asset('bundles/cademreporte/css/demo_table.css') }}" rel="stylesheet">			
<link href="{{ asset('bundles/cademreporte/css/jquery.dataTables_themeroller.css') }}" rel="stylesheet">
{% endblock %}

{% block javascripts %}
<script src="{{ asset('bundles/cademreporte/js/jquery.dataTables.min.js') }}"></script>
<script src="{{ asset('bundles/cademreporte/js/dataTables.fixedColumns.js') }}"></script>
<script>
//{#% for item in variables_clientes %#}
//{#{"var i_"~item.variable.nombre~";"}#}
//{#% endfor %#}

var i_quiebre;
var periodo = {{ periodos|raw }};
var oTable;
var maxWidth;

function calcularAnchoMaximo()
{
	// Calcula el ancho máximo de la tabla	
	var extension={{head|length*10-100}};
	
	if(extension<0)
		extension=0;
		
	maxWidth=100+extension;
	
	$('table').css('max-width',maxWidth+'%');
	// alert('maxWidth='+maxWidth);
}

function construirTabla()
{
	oTable = $('#tabla_resumen').dataTable({
		"bProcessing": true,
		"bServerSide": true,
		"sAjaxSource": "{{ path('resumen_tabla') }}",
		"sScrollY": "300px",
		"sScrollX": "100%",
 		"sScrollXInner": maxWidth+'%',
 		"bScrollCollapse": true,
		"bFilter": false,
		"bSort": false,
		"bInfo": false,
		"bPaginate": false,
		"bJQueryUI": true,
		"bAutoWidth": false, 
		"aoColumnDefs": [
			{ "bVisible": false, "aTargets": [1] }
		],
		"fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndexFull ) {			
			$(nRow).attr("data-tt-parent-id",aData[1]);		  
		},		
		"aaSortingFixed": [[ 1, 'asc' ]],
	//	"sDom": '<"H"Cfr>t<"F"ip>',					
	});
	$('div.fg-toolbar:first').append("<h5 style='float:left;margin:0em'>Tabla Resumen Quiebre: (%) de Quiebre Categoria/Cadena</h5>");
}

function fixedColumn()
{
		new FixedColumns( oTable, {
		"fnDrawCallback": function ( left, right ) {
			/////////////////////////// Esta parte añade las filas de agregacion a la tabla //////////////////////////////////
			var oSettings = oTable.fnSettings();
			if ( oSettings.aiDisplay.length === 0 )
			{
				return;
			}

			var nGroup, nCell, iIndex, sGroup;
			var sLastGroup = "", iCorrector=0;
			var nTrs = $('#tabla_resumen tbody tr');
			// var iColspan = nTrs[0].getElementsByTagName('td').length;
            var cols=oTable.fnSettings().aoColumns.length-1;
			
			for ( var i=0 ; i<nTrs.length ; i++ )
			{
				iIndex = oSettings._iDisplayStart + i;

				sGroup = oSettings.aoData[ oSettings.aiDisplay[iIndex] ]._aData[1];
				
				if ( sGroup != sLastGroup )
				{
              		var nGroup = document.createElement('tr');
					
					var nCells= new Array();    
                  
                    for(var j=0 ; j< cols ; j++)
					{
						nCells[j] = document.createElement( 'td' );						 
						nCells[j].className = "group";														
						nCells[j].innerHTML = 0;
																	
						nGroup.appendChild( nCells[j] );						 
					}
                    nTrs[i].parentNode.insertBefore( nGroup, nTrs[i] );
					// Se crea atributo que asocie la fila de agregacion con sus filas hijas
					var att=document.createAttribute("data-tt-id");
					att.value=sGroup;
					nTrs[i].previousSibling.setAttributeNode(att);
					// Se agrega una clase que permita seleccionar cada fila de agregacion
					var att=document.createAttribute("class");
					att.value="parent";
					// Se añade fila de agregacion para tabla principal
					nTrs[i].previousSibling.setAttributeNode(att);				
                    
					// /* Cell to insert into the frozen columns */
					
                    nGroup = document.createElement( 'tr' );
					nCell = document.createElement( 'td' );
					nCell.className = "group tag";
					nCell.innerHTML = sGroup.toUpperCase();
					nGroup.appendChild( nCell );
                    // Se añade fila de agregacion para tabla fija
					$(nGroup).insertBefore( $('tbody tr:eq('+(i+iCorrector)+')', left.body)[0] );
					
					iCorrector++;
					sLastGroup = sGroup;
				}
			}
			//////////////// Esta parte calcula los valores de las agregaciones (SEGMENTO Y TOTAL) //////////////////////
					
				var totalesGlobales=new Array();
				var contGlobal=0;
				for (var i = 0; i < cols ; i++) totalesGlobales[i] = 0;
				$('#tabla_resumen tbody tr.parent').each(function(){						
					var totalesParciales= new Array();
					for (var i = 0; i < cols; i++) totalesParciales[i] = 0;
					var cont=0;
					$('#tabla_resumen tbody tr[data-tt-parent-id="'+$(this).attr('data-tt-id')+'"]').each(function(){						
						contGlobal++;
						var j=0;
						$(this).children().each(function(){
							// alert($(this).text());
							if($(this).text()=='-')
								totalesParciales[j]=totalesParciales[j]+0;
							else
								totalesParciales[j]=totalesParciales[j]+parseFloat($(this).text());
							j++;
						});
						cont++;
					});
					var j=0;
					$(this).children().each(function(){
						$(this).text(parseFloat((totalesParciales[j]/cont)).toFixed(1));
						totalesGlobales[j]=totalesGlobales[j]+totalesParciales[j];							
						j++;
					});
				});	
				var nTrs = $('#tabla_resumen tbody tr');
				var nGroup = document.createElement( 'tr' );
						
				var nCells= new Array();
				
				for(var j=0 ; j<cols ; j++)
				{
					nCells[j] = document.createElement( 'td' );					
					nCells[j].className = "group";							
						
					nCells[j].innerHTML = parseFloat((totalesGlobales[j])/contGlobal).toFixed(1);//totales[j];					
					nGroup.appendChild( nCells[j] );
				}			
				nTrs[0].parentNode.insertBefore( nGroup, nTrs[0] );
				var att=document.createAttribute("class");
				att.value="parent head";
				// Se añade fila de agregacion para tabla principal
				nTrs[0].previousSibling.setAttributeNode(att);		
				
                nGroup = document.createElement( 'tr' );
				nCell = document.createElement( 'td' );
				nCell.className = "group tag";
				nCell.innerHTML = "QUIEBRE GENERAL";
				nGroup.appendChild( nCell );
                // Se añade fila de agregacion para tabla fija
				$(nGroup).insertBefore( $('tbody tr:eq('+(0)+')', left.body)[0] );				
								
                // Se añade fila de agregacion para tabla fija
				$(nGroup).insertBefore( $('tbody tr:eq('+(0)+')', left.body)[0] );					
				///////////////////////////////////////////////////////////////////////////////////////////////////////////
		}
	});
}

$(document).ready(function () {
	
	var callbacks = $.Callbacks();

	callbacks.add( calcularAnchoMaximo() );
	callbacks.add( construirTabla() );
	callbacks.add( fixedColumn() );
	
	{#% for item in variables_clientes %#}
        {#% if loop.index == 1 %#}
		//{#{"i_"~item.variable.nombre}#} = new Highcharts.Chart({
		i_quiebre = new Highcharts.Chart({
		chart: {    
			renderTo: 'i_quiebre',
                        type: 'spline',
                        //marginRight: 130,
                        //marginBottom: 25,                                
			plotBackgroundColor: null,
			plotBorderWidth: null,
			plotShadow: false,
                        width: 900,
                        height: 350                        
		},
		title: {
			text: 'Evolución Quiebre'
		},
		tooltip: {
			pointFormat: '{series.name}: <b>{point.percentage}%</b>',
			percentageDecimals: 1,
			enabled: true
		},
		xAxis: {
            categories: periodo.data,
			
			labels: {
                rotation: 0
            }			
		},		
		yAxis: {
	        max: 100,
			min: 0,
            //categories: [0,100],
			title: {
                    text: 'Promedio Quiebre (%)'
            }
		},		
		series: [{
                    name: '% Quiebre',
                    data: {{ evolutivo }}			
                }],
		legend: {
               layout: 'vertical',
               align: 'center',
               x: 400,
               verticalAlign: 'top',
               y: 0,
               floating: true
            },				
		credits: {
			enabled: false
		}
	});
        {#% endif %#}
	{#% endfor %#}
	
	cargartooltip();
	
	
	
	//GUARDA QUE BOTON SE PRESIONA EN EL FORMULARIO
	var $boton_presionado;
	$('form#filtros input').click(function() {
		$boton_presionado = $(this);
	});
	
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	$('form#filtros').submit(function() {
		if($boton_presionado.attr("value") === "Limpiar Filtros"){
			$('form#filtros select[multiple="multiple"] option').prop('selected',true);
			$('#f_region_Region').change();
		}
		else procesarform(); //SE PROCESA FORMULARIO
		return false;
	});
	
	//REGION
	$(document).on('change', '#f_region_Region', function(){
		//RECARGAR PROVINCIA
		var datos = $(this).serialize();
		$('#f_provincia_Provincia').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_region') }}", datos, function(data) {
			$('#f_provincia').html(data);
		},'html')
		.done(function() {quitarloader(); $('#f_provincia_Provincia').change();})
		.fail(function() { alert("Se produjo un error al cargar las provincias");quitarloader();})
		.always(function() { /*alert("finished");*/});
	});
	
	//PROVINCIA
	$(document).on('change', '#f_provincia_Provincia', function(){
		//RECARGAR COMUNA
		var datos = $(this).serialize();
		$('#f_comuna_Comuna').before('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		$.get( "{{ path('helper_filtro_provincia') }}", datos, function(data) {
			$('#f_comuna').html(data);
		},'html')
		.done(function() { /*alert("second success");*/ })
		.fail(function() { alert("Se produjo un error al cargar las comunas"); })
		.always(function() { /*alert("finished");*/ quitarloader();});
	});
	
	
	
	
});
	
		
	$('thead th').click(function() {
		var label= $(this).attr('tag');
	
		$(".ui-state-active").removeClass("ui-state-active");
		$(this).addClass("ui-state-active");
		$.get( "{#{ path('resumen_evolutivo') }#}", label, function(data) {	
			{#% for item in variables_clientes %#}
				{#% if loop.index == 1 %#}
					i_quiebre.series[0].setData(data); 
					i_quiebre.setTitle({ text: "Evolucion Quiebre '"+label +"'"});
				{#% endif %#}
			{#% endfor %#}
			cargartooltip();
		});
	});		
	
	
	
	
	//LOGICA DEL SUBMIT DEL FORMULARIO, SE DEBERIA OCUPAR AJAX
	function procesarform(){
	
		//LOADER
		$('form#filtros input').last().after('<img class="loader" alt="" style="float:right" src="/bundles/cademreporte/images/loader.gif">');
		//GET
		//PROCESO
		alert('aca se hace request get/post');
		//AL FINALIZAR
		quitarloader();
	}
	
	function quitarloader(){
		if($('.loader').length > 0) $('.loader').remove();
	}
		
		

	function cargartooltip(){
		$.each(periodo.data, function(index, value) {
			$('div#i_quiebre tspan:contains("'+value+'")').attr('title', periodo.tooltip[index])
			.tooltip({
				track: true
			});
		});	
	}
 </script>
{% endblock %}