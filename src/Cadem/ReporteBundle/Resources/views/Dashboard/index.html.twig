{% extends '::base.html.twig' %}

{% block title %}Cadem Reporte{% endblock %}

{% block filtro %}
	<form id="filtros" action="" method="post" >
		{% for form in forms %}
				{{ form_widget(form) }}
		{% endfor %}
		<input class="btn btn-primary" type="submit" value="Filtrar" />
	</form>
{% endblock %}

{% block body %}
		<div class="span9">
			<div class="container-fluid well" style="padding-top:0">
				<h4>Estudio Quiebre y precio</h4>
				<div class="hero-unit" style="padding:15px;margin-bottom:10px">
					<!-- <h3>Indicadores</h3> -->
					<div class="row-fluid">
						<div class="span3">
							<div id="i_quiebre1" style="height: 200px;"></div>
						</div>
						<div class="span3">
							<div id="i_quiebre2" style="height: 200px;"></div>
						</div>
					{% for item in variables_clientes %}
						<div class="span3">
							{% if item.variable.nombre != "cobertura" %}
							<div id="i_{{item.variable.nombre}}" style="height: 200px;"></div>
							{% endif %}
						</div>
					{% endfor %}		
					</div>
				</div>
				<div class="hero-unit" style="padding:15px;margin-bottom:10px">
					<div id="evo_quiebre_precio" style="min-width: 250px; height: 300px; margin: 0 auto"></div>
				</div>
			</div>
			
			<div class="container-fluid well" style="padding-top:0">
				<h4>Estudio Cobertura</h4>
				<div class="hero-unit" style="padding:15px;margin-bottom:10px">
					<!-- <h3>Indicadores</h3> -->
					<div class="row-fluid">
						<div class="span3">
							<div id="i_cobertura" style="height: 200px;"></div>
						</div>				
					</div>
				</div>
				<div class="hero-unit" style="padding:15px;margin-bottom:10px">
					<div id="evo_cobertura" style="min-width: 250px; height: 300px; margin: 0 auto"></div>
				</div>
			</div>
			
			
			<div class="row-fluid">
            <div class="span4">
              <h3>Actualización 02/03/2013</h3>
              <p>Se ha trabajado en una actualización con las siguientes características:</p>
			  <ol>
					<li>Cambio de color...</li>
					<li>Cambio de forma</li>
					<li>Indicador de salas...</li>
			  </ol>
              <p><a class="btn" href="#">Ver detalles &raquo;</a></p>
            </div><!--/span-->
            <div class="span4">
              {{ "
			  Actualización
			  =============
			  Se ha trabajado en una actualización con las siguientes características:
			  - Cambio de noticia a RST
			  - Cambio de base de datos
			  " | rst2html | raw }}
              <p><a class="btn" href="#">Ver detalles &raquo;</a></p>
            </div><!--/span-->
            <div class="span4">
              <h3>Heading</h3>
              <p>Donec id elit non mi porta gravida at eget metus. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Etiam porta sem malesuada magna mollis euismod. Donec sed odio dui. </p>
              <p><a class="btn" href="#">View details &raquo;</a></p>
            </div><!--/span-->
          </div><!--/row-->
		  
        </div><!--/span-->
{% endblock %}


{% block javascripts %}
<script src="{{ asset('bundles/cademreporte/js/highcharts.regression.js') }}"></script>
<script src="{{ asset('bundles/cademreporte/js/highcharts-more.js') }}"></script>
<script>
{% for item in variables_clientes %}
{{"var i_"~item.variable.nombre~";"}}
{% endfor %}
var i_cobertura;
var evo_quiebre_precio;
var evo_cobertura;
var i_quiebre1, i_quiebre2;

$(document).ready(function () {
		
	i_quiebre1 = new Highcharts.Chart({
		chart: {
	        type: 'gauge',
	        plotBorderWidth: 1,
	        plotBackgroundColor: {
	        	linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
	        	stops: [
	        		[0, '#FFF4C6'],
	        		[0.3, '#FFFFFF'],
	        		[1, '#FFF4C6']
	        	]
	        },
	        plotBackgroundImage: null,
	        height: 200,
			renderTo: 'i_quiebre1'
	    },
	
	    title: {
	        text: 'Quiebre'
	    },
	    
	    pane: [{
	        startAngle: -45,
	        endAngle: 45,
	        background: null,
	        center: ['50%', '110%'],
	        size: 180
	    }],	    		        
	
	    yAxis: [{
	        min: 0,
	        max: 100,
	        minorTickPosition: 'outside',
	        tickPosition: 'outside',
	        labels: {
	        	rotation: 'auto',
	        	distance: 20
	        },
	        plotBands: [{
	        	from: 30,
	        	to: 70,
	        	color: 'yellow',
	        	innerRadius: '100%',
	        	outerRadius: '102%'
	        },{
	        	from: 0,
	        	to: 30,
	        	color: 'green',
	        	innerRadius: '100%',
	        	outerRadius: '102%'
	        },{
	        	from: 70,
	        	to: 100,
	        	color: 'red',
	        	innerRadius: '100%',
	        	outerRadius: '102%'
	        }],
	        pane: 0,
	        title: {
	        	text: 'Quiebre',
	        	y: -30
	        }
	    }],
	    
	    plotOptions: {
	    	gauge: {
	    		dataLabels: {
	    			enabled: false
	    		},
	    		dial: {
	    			radius: '100%'
	    		}
	    	}
	    },
	    	
	
	    series: [{
	        data: [10],
	        yAxis: 0
	    }],
		credits: {
				enabled: false
			}
	
	},
	
	// Let the music play
	function(chart) {
	    setInterval(function() {
	        var left = chart.series[0].points[0],
	            leftVal,
                texto = "",
	            inc = (Math.random()) * 5;
	
	        leftVal =  left.y + inc;
	        if (leftVal < 0 || leftVal > 100) {
	            leftVal = left.y - inc;
	        }
            
            if(leftVal >= 0 && leftVal <= 30) texto = 'Quiebre<br/><span style="font-size:10px">Bueno</span>'
            if(leftVal > 30 && leftVal <= 70) texto = 'Quiebre<br/><span style="font-size:10px">Regular</span>'
            if(leftVal > 70 && leftVal <= 100) texto = 'Quiebre<br/><span style="font-size:10px">Pésimo</span>'
	        chart.yAxis[0].setTitle({
                text: texto
            });
	        left.update(leftVal, false);
	        chart.redraw();
	
	    }, 500);
	
	});

	i_quiebre2 = new Highcharts.Chart({
		chart: {
	        type: 'gauge',
	        plotBackgroundColor: null,
	        plotBackgroundImage: null,
	        plotBorderWidth: 0,
	        plotShadow: false,
			renderTo: 'i_quiebre2'
	    },
	    
	    title: {
	        text: 'Quiebre'
	    },
	    
	    pane: {
	        startAngle: -150,
	        endAngle: 150,
	        background: [{
	            backgroundColor: {
	                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
	                stops: [
	                    [0, '#FFF'],
	                    [1, '#333']
	                ]
	            },
	            borderWidth: 0,
	            outerRadius: '109%'
	        }, {
	            backgroundColor: {
	                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
	                stops: [
	                    [0, '#333'],
	                    [1, '#FFF']
	                ]
	            },
	            borderWidth: 1,
	            outerRadius: '107%'
	        }, {
	            // default background
	        }, {
	            backgroundColor: '#DDD',
	            borderWidth: 0,
	            outerRadius: '105%',
	            innerRadius: '103%'
	        }]
	    },
	       
	    // the value axis
	    yAxis: {
	        min: 0,
	        max: 100,
	        
	        minorTickInterval: 'auto',
	        minorTickWidth: 1,
	        minorTickLength: 10,
	        minorTickPosition: 'inside',
	        minorTickColor: '#666',
	
	        tickPixelInterval: 30,
	        tickWidth: 2,
	        tickPosition: 'inside',
	        tickLength: 10,
	        tickColor: '#666',
	        labels: {
	            step: 2,
	            rotation: 'auto'
	        },
	        title: {
	            text: '% Quiebre',
                y: 15
	        },
	        plotBands: [{
	            from: 0,
	            to: 30,
				innerRadius: '95%',
	            color: '#55BF3B' // green
	        }, {
	            from: 30,
	            to: 70,
				innerRadius: '95%',
	            color: '#DDDF0D' // yellow
	        }, {
	            from: 70,
	            to: 100,
				innerRadius: '95%',
	            color: '#DF5353' // red
	        }]        
	    },
	
	    series: [{
	        name: 'Quiebre',
	        data: [10],
	        tooltip: {
	            valueSuffix: ' %'
	        }
	    }],
		credits: {
				enabled: false
			}
	
	}, 
	// Add some life
	function (chart) {
		if (!chart.renderer.forExport) {
		    setInterval(function () {
		        var point = chart.series[0].points[0],
		            newVal,
		            inc = Math.round((Math.random() - 0.1) * 20);
		        
		        newVal = point.y + inc;
		        if (newVal < 0 || newVal > 100) {
		            newVal = point.y - inc;
		        }
		        
		        point.update(newVal);
		        
		    }, 3000);
		}
	});

	$('form#filtros').submit(function() {
		$.get( "{{ path('dashboard_indicadores') }}", $(this).serialize(), function(data) {
				{% for item in variables_clientes %}
				if (typeof data.{{item.variable.nombre}} != 'undefined'){
					if ({{"i_"~item.variable.nombre}}.series.length) {
						{{"i_"~item.variable.nombre}}.series[0].remove();
					}
					{{"i_"~item.variable.nombre}}.addSeries(data.{{item.variable.nombre}});
					{{"i_"~item.variable.nombre}}.setTitle({ text: data.{{item.variable.nombre}}.name});
				}
				{% endfor %}
				
				
				
				evo_quiebre_precio.series[0].remove();
				evo_quiebre_precio.series[0].remove();				
				evo_quiebre_precio.addSeries(data.evo_quiebre_precio.precio);
				evo_quiebre_precio.addSeries(data.evo_quiebre_precio.quiebre);
				
			},
		'json');
		return false;
	});
	
	$.get( "{{ path('dashboard_indicadores') }}", $('form#filtros').serialize(), function(data) {
	
		{% for item in variables_clientes %}
		{{"i_"~item.variable.nombre}} = new Highcharts.Chart({
			chart: {
				renderTo: 'i_{{item.variable.nombre}}',
				plotBackgroundColor: null,
				plotBorderWidth: null,
				plotShadow: false
			},
			title: {
				text: '{{item.variable.nombre|capitalize}}'
			},
			tooltip: {
				pointFormat: '{series.name}: <b>{point.percentage}%</b>',
				percentageDecimals: 1,
				enabled: false
			},
			plotOptions: {
				pie: {
					allowPointSelect: true,
					cursor: 'pointer',
					dataLabels: {
						enabled: true,
						formatter: function() {
							return this.point.percentage.toFixed(1) + ' %';
						},
						distance: -20,
						color:'white'
					},
					showInLegend: true
				}
			},
			series: [data.{{item.variable.nombre}}],
			credits: {
				enabled: false
			}
		});
		{% endfor %}
		
		
		evo_quiebre_precio = new Highcharts.Chart({
            chart: {
                zoomType: 'x',
				renderTo: 'evo_quiebre_precio'
            },
            title: {
                text: 'Evolutivo Quiebre y Precio'
            },
            xAxis: [{
                categories: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun',
                    'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']
            }],
            yAxis: [{
                title: {
                    text: 'Promedio Quiebre (%)',
                    style: {
                        color: '#4572A7'
                    }
                }
    
            }, {
                //gridLineWidth: 0,
                title: {
                    text: 'Promedio Precio ($)',
                    style: {
                        color: '#89A54E'
                    }
                },
                opposite: true
            }],
            tooltip: {
                shared: true
            },
            legend: {
                layout: 'vertical',
                align: 'center',
                x: 0,
                verticalAlign: 'top',
                y: 30,
                floating: true,
                backgroundColor: '#FFFFFF'
            },
            series: [data.evo_quiebre_precio.precio, data.evo_quiebre_precio.quiebre,
			{
				type: 'line',
				marker: { enabled: false },
				/* function returns data for trend-line */
				data: (function() {
					  return fitData(data.evo_quiebre_precio.quiebre.data).data;
					})(),
				name: 'Tendencia Quiebre'
			}
			
			],
			credits: {
				enabled: false
			},
            plotOptions: {
                series: {
                        events: {
                            legendItemClick: function () {
                                var series = this.chart.series;
                                var seriesIndex = this.index;
                                if(seriesIndex == 1){//QUIEBRE
                                    if(series[1].visible == false && series[0].visible == false) mostrarbandaquiebre();
                                    if(series[1].visible == true && series[0].visible == true) mostrarbandaprecio();
                                }
                                if(seriesIndex == 0){//PRECIO
                                    if(series[1].visible == true && series[0].visible == true) mostrarbandaquiebre();
                                    if(series[1].visible == false && series[0].visible == false) mostrarbandaprecio();
                                }
                                
                                if((series[0].visible == false && series[1].visible == true) || (series[0].visible == true && series[1].visible == false)) borrarbandas();
                                
                                
                                
                                //return false; // <== returning false will cancel the default action
                            }
                        }
                    ,
                    showInLegend: true
                }
            }
        });
        
        function mostrarbandaquiebre(){
            borrarbandas();
            var trasparencia = 0.15;
            evo_quiebre_precio.yAxis[0].addPlotBand({ // Buen quiebre
                from: 0,
                to: 20,
                color: 'rgba(0, 200, 0, '+trasparencia+')',
                id: 'pb-q1',
                label: {
                    text: 'Quiebre aceptable',
                    style: {
                        color: '#606060'
                    }
                }
            });
            evo_quiebre_precio.yAxis[0].addPlotBand({ // Intermedio quiebre
                from: 20,
                to: 40,
                color: 'rgba(200, 200, 0, '+trasparencia+')',
                id: 'pb-q2',
                label: {
                    text: 'Quiebre peligroso',
                    style: {
                        color: '#606060'
                    }
                }
            });
            evo_quiebre_precio.yAxis[0].addPlotBand({ // Mal quiebre
                from: 40,
                to: 100,
                color: 'rgba(200, 0, 0, '+trasparencia+')',
                id: 'pb-q3',
                label: {
                    text: 'Quiebre excesivo',
                    style: {
                        color: '#606060'
                    }
                }
            });
            
        }
        
        function mostrarbandaprecio(){
            borrarbandas();
            var trasparencia = 0.15;
            evo_quiebre_precio.yAxis[1].addPlotBand({ // Buen quiebre
                from: 0,
                to: 3000,
                color: 'rgba(0, 200, 0, '+trasparencia+')',
                id: 'pb-p1',
                label: {
                    text: 'Precio aceptable',
                    style: {
                        color: '#606060'
                    }
                }
            });
            evo_quiebre_precio.yAxis[1].addPlotBand({ // Intermedio quiebre
                from: 3000,
                to: 5000,
                color: 'rgba(200, 0, 0, '+trasparencia+')',
                id: 'pb-p2',
                label: {
                    text: 'Precio peligroso',
                    style: {
                        color: '#606060'
                    }
                }
            });
            
        }
        
        function borrarbandas(){
            evo_quiebre_precio.yAxis[0].removePlotBand('pb-q1');
            evo_quiebre_precio.yAxis[0].removePlotBand('pb-q2');
            evo_quiebre_precio.yAxis[0].removePlotBand('pb-q3');
            evo_quiebre_precio.yAxis[1].removePlotBand('pb-p1');
            evo_quiebre_precio.yAxis[1].removePlotBand('pb-p2');
        }
		
		
		evo_cobertura = new Highcharts.Chart({
            chart: {
                zoomType: 'x',
				renderTo: 'evo_cobertura'
            },
            title: {
                text: 'Evolutivo Cobertura'
            },
            xAxis: {
                categories: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun',
                    'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']
				//type: 'category'
				/*labels: {
					formatter: function() {
					alert(this.value);
						return this.value;
					}
				}*/
            },
            yAxis: [{
                title: {
                    text: 'Promedio Cobertura (%)',
                    style: {
                        color: '#4572A7'
                    }
                }
    
            }],
            tooltip: {
                shared: true
            },
            legend: {
                layout: 'vertical',
                align: 'center',
                x: 100,
                verticalAlign: 'top',
                y: 60,
                floating: true,
                backgroundColor: '#FFFFFF'
            },
            series: [data.evo_cobertura.cobertura],
			credits: {
				enabled: false
			}
        });
	
	});
	
	
	
	
	
});
 </script>
{% endblock %}